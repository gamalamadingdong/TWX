"""
Maps CWE IDs to meaningful vulnerability type categories.
"""

CWE_VULN_TYPE_MAPPING = {
    # Injection vulnerabilities
    'CWE-89': 'SQL Injection',
    'CWE-564': 'SQL Injection',
    'CWE-79': 'Cross-site Scripting (XSS)',
    'CWE-80': 'Cross-site Scripting (XSS)',
    'CWE-78': 'Command Injection',
    'CWE-77': 'Command Injection',
    'CWE-91': 'XML Injection',
    'CWE-917': 'Expression Language Injection',
    
    # Authentication/Access
    'CWE-287': 'Authentication Issues',
    'CWE-306': 'Authentication Issues',
    'CWE-522': 'Weak Credentials',
    'CWE-521': 'Weak Credentials',
    'CWE-798': 'Hardcoded Credentials',
    'CWE-259': 'Hardcoded Credentials',
    'CWE-284': 'Access Control Issues',
    'CWE-285': 'Access Control Issues',
    'CWE-639': 'Access Control Issues',

    # Information disclosure
    'CWE-200': 'Information Disclosure',
    'CWE-209': 'Information Disclosure',
    'CWE-532': 'Information Disclosure',
    
    # File-related vulnerabilities
    'CWE-22': 'Path Traversal',
    'CWE-23': 'Path Traversal',
    'CWE-434': 'Unrestricted File Upload',
    'CWE-73': 'Path Traversal',
    'CWE-59': 'Link Following',
    
    # Memory safety
    'CWE-119': 'Buffer Overflow',
    'CWE-120': 'Buffer Overflow',
    'CWE-121': 'Stack-based Buffer Overflow',
    'CWE-122': 'Heap-based Buffer Overflow',
    'CWE-125': 'Out-of-bounds Read',
    'CWE-787': 'Out-of-bounds Write',
    'CWE-416': 'Use After Free',
    'CWE-415': 'Double Free',
    'CWE-476': 'NULL Pointer Dereference',
    'CWE-401': 'Memory Leak',
    'CWE-400': 'Resource Exhaustion',
    'CWE-674': 'Resource Exhaustion',
    
    # Cryptographic
    'CWE-295': 'Certificate Validation',
    'CWE-327': 'Broken/Risky Crypto',
    'CWE-328': 'Broken/Risky Crypto',
    'CWE-326': 'Inadequate Encryption Strength',
    'CWE-759': 'Weak Salt',
    'CWE-321': 'Broken/Risky Crypto',
    
    # Web-specific
    'CWE-352': 'Cross-Site Request Forgery (CSRF)',
    'CWE-601': 'Open Redirect',
    'CWE-918': 'SSRF',
    'CWE-611': 'XXE',
    'CWE-384': 'Session Fixation',
    
    # Other
    'CWE-20': 'Improper Input Validation',
    'CWE-94': 'Code Injection',
    'CWE-502': 'Deserialization of Untrusted Data',
    'CWE-269': 'Privilege Escalation',
    'CWE-863': 'Access Control Issues',
    'CWE-770': 'Resource Allocation',
    'CWE-362': 'Race Condition',
    'CWE-319': 'Cleartext Transmission',
    'CWE-330': 'Weak Random',
}

def get_vulnerability_type(cwe_id):
    """
    Maps a CWE ID to a meaningful vulnerability type.
    Args:
        cwe_id (str): The CWE ID in format 'CWE-XXX'
    Returns:
        str: The vulnerability type or 'Other' if not mapped
    """
    return CWE_VULN_TYPE_MAPPING.get(cwe_id, 'Other')

# Add to cwe_vulnerability_types.py

def map_cwe_to_vulnerability_details(cwe_id):
    """
    Maps a CWE ID to detailed vulnerability information.
    
    Args:
        cwe_id (str): CWE ID in format 'CWE-XXX'
        
    Returns:
        dict: Dictionary containing vulnerability details:
            - type: General vulnerability type
            - category: Broader category (e.g., Injection, Memory Safety)
            - attack_patterns: List of related CAPEC IDs
            - attack_techniques: List of related ATT&CK technique IDs
    """
    # Import needed mappers
    from data_processing.mappers.cwe_capec_mapper import load_cwe_capec_mapping
    from data_processing.mappers.capec_attack_mapper import get_attack_techniques_for_cwe
    
    result = {
        'type': get_vulnerability_type(cwe_id),
        'category': '',
        'attack_patterns': [],
        'attack_techniques': []
    }
    
    # Determine category
    cwe_categories = {
        "Memory Safety": ["CWE-119", "CWE-120", "CWE-121", "CWE-122", "CWE-125", 
                          "CWE-415", "CWE-416", "CWE-476", "CWE-787"],
        "Injection": ["CWE-74", "CWE-77", "CWE-78", "CWE-79", "CWE-80", 
                      "CWE-89", "CWE-91", "CWE-94", "CWE-917"],
        "Access Control": ["CWE-22", "CWE-264", "CWE-269", "CWE-275", "CWE-276", 
                           "CWE-284", "CWE-285", "CWE-287", "CWE-639"],
        "Cryptographic Issues": ["CWE-295", "CWE-310", "CWE-320", "CWE-321", "CWE-326", 
                                 "CWE-327", "CWE-329", "CWE-330"],
        "Information Disclosure": ["CWE-200", "CWE-203", "CWE-209", "CWE-532", "CWE-538"],
    }
    
    for category, cwe_list in cwe_categories.items():
        if cwe_id in cwe_list:
            result['category'] = category
            break
    
    # Get CAPEC attack patterns
    cwe_capec_mapping = load_cwe_capec_mapping()
    capec_ids = cwe_capec_mapping.get(cwe_id, [])
    if not isinstance(capec_ids, list):
        capec_ids = [capec_ids]
    result['attack_patterns'] = capec_ids
    
    # Get ATT&CK techniques through CAPEC mapping
    attack_techniques = get_attack_techniques_for_cwe(cwe_id, cwe_capec_mapping)
    result['attack_techniques'] = attack_techniques
    
    return result